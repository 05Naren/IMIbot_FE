<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="failedTestCases" time="870" tests="5" failures="0" errors="0">
    <testsuite name="failedTestCases" tests="5" failures="0" errors="0" time="870" timestamp="2020-06-23 20:01:27" hostname="narendra.n - WLPT580.imidomain.com" id="Test Suites/failedTestCases">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="D:\\IMIbot.ai-Project\\Reports\\20200623_200121\\failedTestCases\\20200623_200121"/>
            <property name="logFiles" value="D:\\IMIbot.ai-Project\\Reports\\20200623_200121\\failedTestCases\\20200623_200121\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="narendra.n - WLPT580.imidomain.com"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.3.3.11"/>
            <property name="browser" value="Chrome 83.0.4103.106"/>
            <property name="hostAddress" value="192.168.43.195"/>
            <property name="sessionId" value="2896a1660be1c5cf416cef0fdd0ef3a1"/>
            <property name="seleniumVersion" value="3.141.59"/>
            <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
            <property name="platform" value="Windows 8.1"/>
        </properties>
        <testcase name="Test Cases/Faqbot/disabledLowConfidenceAndDownvote_Test" classname="Test Cases/Faqbot/disabledLowConfidenceAndDownvote_Test" status="PASSED">
            <system-out>2020-06-23 20:01:28 - [TEST_CASE][PASSED] - Test Cases/Faqbot/disabledLowConfidenceAndDownvote_Test: Test Cases/Faqbot/disabledLowConfidenceAndDownvote_Test&#xD;
&#xD;
2020-06-23 20:01:29 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-23 20:01:29 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:01:30 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-23 20:01:30 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-23 20:01:31 - [MESSAGE][INFO] - Action delay is set to 1 seconds&#xD;
&#xD;
2020-06-23 20:01:48 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:01:48 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-23 20:01:50 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-23 20:01:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:01:52 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-23 20:01:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:01:56 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:01:56 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), PASSWORD): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:01:59 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:01:59 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:02:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:02:01 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:02:23 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:02:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:02:23 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Q&amp;A bots", FAQ_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:02:24 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:02:27 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-23 20:02:29 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:02:29 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/articles")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:34 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:34 - [TEST_STEP][PASSED] - platform.Method.trainAndComment(comment): platform.Method.trainAndComment is PASSED&#xD;
&#xD;
2020-06-23 20:02:40 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //button[contains(text(),'Train')]'. Please recheck the objects properties to make sure the desired element is located. &#xD;
&#xD;
2020-06-23 20:02:40 - [MESSAGE][INFO] - BOT STATE IS TRAINED&#xD;
&#xD;
2020-06-23 20:02:40 - [MESSAGE][PASSED] - platform.Method.trainAndComment is PASSED&#xD;
&#xD;
2020-06-23 20:02:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:43 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:43 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER)): Keys 'ENTER + Does late payment impact my CIBIL score?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-23 20:02:46 - [MESSAGE][PASSED] - Keys 'ENTER + Does late payment impact my CIBIL score?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-23 20:02:46 - [TEST_STEP][PASSED] - oldRoomIdList = new java.util.ArrayList(): null&#xD;
&#xD;
2020-06-23 20:02:46 - [TEST_STEP][PASSED] - oldRoomIdList = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:02:51 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:02:51 - [TEST_STEP][PASSED] - oldRoomID = get(0).toString(): null&#xD;
&#xD;
2020-06-23 20:02:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:53 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:53 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/curation")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:56 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:56 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Issues"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:02:58 - [TEST_STEP][PASSED] - platform.CurationSettings.filterRuleTriggered("Low confidence"): platform.CurationSettings.filterRuleTriggered is PASSED&#xD;
&#xD;
2020-06-23 20:03:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/webObjectWithText' is clicked on&#xD;
&#xD;
2020-06-23 20:03:04 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/webObjectWithText' is clicked on&#xD;
&#xD;
2020-06-23 20:03:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/filter' is clicked on&#xD;
&#xD;
2020-06-23 20:03:06 - [MESSAGE][PASSED] - platform.CurationSettings.filterRuleTriggered is PASSED&#xD;
&#xD;
2020-06-23 20:03:06 - [TEST_STEP][PASSED] - verifyTextPresent(oldRoomID, false, STOP_ON_FAILURE): Text '1980633' is present on page &#xD;
&#xD;
2020-06-23 20:03:11 - [MESSAGE][PASSED] - Text '1980633' is present on page &#xD;
&#xD;
2020-06-23 20:03:11 - [TEST_STEP][PASSED] - clearBtn = modifyObjectProperty(findTestObject("Button/clear"), "xpath", "not equals", "//button[text()='Clear']", true, STOP_ON_FAILURE): Modify property of object successfully&#xD;
&#xD;
2020-06-23 20:03:11 - [MESSAGE][PASSED] - Modify property of object successfully&#xD;
&#xD;
2020-06-23 20:03:11 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(clearBtn): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:13 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:13 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo2/settingsOnCuration")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:16 - [TEST_STEP][PASSED] - platform.CurationSettings.disableDownvoted(true): platform.CurationSettings.disableDownvoted is PASSED&#xD;
&#xD;
2020-06-23 20:03:18 - [MESSAGE][PASSED] - Object: 'Object Repository/Toggle/downvoted' is clicked on&#xD;
&#xD;
2020-06-23 20:03:18 - [MESSAGE][PASSED] - platform.CurationSettings.disableDownvoted is PASSED&#xD;
&#xD;
2020-06-23 20:03:18 - [TEST_STEP][PASSED] - platform.CurationSettings.disableLowConfidence(true): platform.CurationSettings.disableLowConfidence is PASSED&#xD;
&#xD;
2020-06-23 20:03:21 - [MESSAGE][PASSED] - Object: 'Object Repository/Toggle/lowConfidence' is clicked on&#xD;
&#xD;
2020-06-23 20:03:21 - [MESSAGE][PASSED] - platform.CurationSettings.disableLowConfidence is PASSED&#xD;
&#xD;
2020-06-23 20:03:21 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/updateSettings")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:23 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:23 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Issues"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:28 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER)): Keys 'ENTER + Does late payment impact my CIBIL score?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-23 20:03:32 - [MESSAGE][PASSED] - Keys 'ENTER + Does late payment impact my CIBIL score?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-23 20:03:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:03:34 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:03:34 - [TEST_STEP][PASSED] - platform.Preview.downvoteResponseWithoutComment(): platform.Preview.downvoteResponseWithoutComment is PASSED&#xD;
&#xD;
2020-06-23 20:03:36 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/downvote' is clicked on&#xD;
&#xD;
2020-06-23 20:03:38 - [MESSAGE][PASSED] - platform.Preview.downvoteResponseWithoutComment is PASSED&#xD;
&#xD;
2020-06-23 20:03:38 - [TEST_STEP][PASSED] - newRoomIdList = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:03:44 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:03:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/refresh")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:49 - [TEST_STEP][PASSED] - newRoomID = get(0).toString(): null&#xD;
&#xD;
2020-06-23 20:03:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/roomID", ["value":"room_id"]), newRoomID): Keys '1980634' sent to object: 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-23 20:03:51 - [MESSAGE][PASSED] - Keys '1980634' sent to object: 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-23 20:03:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/filter")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:03:54 - [TEST_STEP][PASSED] - verifyTextNotPresent(newRoomID, false, STOP_ON_FAILURE): Text '1980634' is not present on page&#xD;
&#xD;
2020-06-23 20:03:56 - [MESSAGE][PASSED] - Text '1980634' is not present on page</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Faqbot/oneClickTestingTrainedVersion_Test" classname="Test Cases/Faqbot/oneClickTestingTrainedVersion_Test" status="PASSED">
            <system-out>2020-06-23 20:03:56 - [TEST_CASE][PASSED] - Test Cases/Faqbot/oneClickTestingTrainedVersion_Test: Test Cases/Faqbot/oneClickTestingTrainedVersion_Test&#xD;
&#xD;
2020-06-23 20:03:57 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-23 20:03:57 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:03:57 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-23 20:03:59 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-23 20:03:59 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-23 20:04:13 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:04:13 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-23 20:04:16 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-23 20:04:16 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:04:16 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-23 20:04:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:04:19 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:04:19 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), PASSWORD): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:04:22 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:04:22 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:04:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:04:24 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:04:41 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:04:41 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:04:41 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Q&amp;A bots", FAQ_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:04:42 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:04:45 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-23 20:04:47 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:04:47 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/articles")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:04:52 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:04:52 - [TEST_STEP][PASSED] - if (verifyElementVisible(findTestObject("Button/makeLive"), OPTIONAL)): Your corpus is live!&#xD;
&#xD;
2020-06-23 20:04:55 - [MESSAGE][PASSED] - Object 'Object Repository/Button/makeLive' is visible&#xD;
&#xD;
2020-06-23 20:04:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/makeLive")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:04:57 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:04:57 - [TEST_STEP][PASSED] - if (!(verifyElementText(findTestObject("Generic/articleState"), "Live", OPTIONAL))): Actual text and expected text of test object 'Object Repository/Generic/articleState' are matched.&#xD;
&#xD;
2020-06-23 20:04:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/articleState' are matched.&#xD;
&#xD;
2020-06-23 20:04:59 - [TEST_STEP][PASSED] - else: Your corpus is live!&#xD;
&#xD;
2020-06-23 20:04:59 - [TEST_STEP][PASSED] - logInfo("Your corpus is live!"): Your corpus is live!&#xD;
&#xD;
2020-06-23 20:04:59 - [MESSAGE][INFO] - Your corpus is live!&#xD;
&#xD;
2020-06-23 20:04:59 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_OneClickTesting"): null&#xD;
&#xD;
2020-06-23 20:05:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/oneClickTest")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:02 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:02 - [TEST_STEP][PASSED] - verifyTextPresent("Message", false, STOP_ON_FAILURE): Text 'Message' is present on page &#xD;
&#xD;
2020-06-23 20:05:06 - [MESSAGE][PASSED] - Text 'Message' is present on page &#xD;
&#xD;
2020-06-23 20:05:06 - [TEST_STEP][PASSED] - verifyTextPresent("Expected article", false, STOP_ON_FAILURE): Text 'Expected article' is present on page &#xD;
&#xD;
2020-06-23 20:05:09 - [MESSAGE][PASSED] - Text 'Expected article' is present on page &#xD;
&#xD;
2020-06-23 20:05:09 - [TEST_STEP][PASSED] - verifyTextPresent("Reset previous context", false, STOP_ON_FAILURE): Text 'Reset previous context' is present on page &#xD;
&#xD;
2020-06-23 20:05:12 - [MESSAGE][PASSED] - Text 'Reset previous context' is present on page &#xD;
&#xD;
2020-06-23 20:05:12 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/importIcon")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:15 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:15 - [TEST_STEP][PASSED] - platform.Method.uploadCsvFile(false, uploadFAQTestCases): platform.Method.uploadCsvFile is PASSED&#xD;
&#xD;
2020-06-23 20:05:15 - [MESSAGE][INFO] - PREVIOUS DATA NOT BE OVERRIDDEN&#xD;
&#xD;
2020-06-23 20:05:17 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/oneClickFAQ.csv' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-23 20:05:19 - [MESSAGE][PASSED] - platform.Method.uploadCsvFile is PASSED&#xD;
&#xD;
2020-06-23 20:05:19 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/updateBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:22 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo2/execution")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:24 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:24 - [TEST_STEP][PASSED] - platform.Method.runOneClickTestOnLiveData(true): platform.Method.runOneClickTestOnLiveData is PASSED&#xD;
&#xD;
2020-06-23 20:05:26 - [MESSAGE][PASSED] - Object 'Object Repository/Button/btnExecute' is present&#xD;
&#xD;
2020-06-23 20:05:32 - [MESSAGE][PASSED] - platform.Method.runOneClickTestOnLiveData is PASSED&#xD;
&#xD;
2020-06-23 20:05:32 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/testSummary", ["status":"summery-status-completed"]), 90, STOP_ON_FAILURE): Object 'Object Repository/Generic/testSummary' is visible&#xD;
&#xD;
2020-06-23 20:05:38 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/testSummary' is visible&#xD;
&#xD;
2020-06-23 20:05:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("ICONS/action", ["index":2])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:40 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/btnOptionsInOneClickTesting", ["btnValue":"Test in preview"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:43 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:43 - [TEST_STEP][PASSED] - getRoomIdAt = new java.util.ArrayList(): null&#xD;
&#xD;
2020-06-23 20:05:43 - [TEST_STEP][PASSED] - getRoomIdAt = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:05:48 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:05:48 - [TEST_STEP][PASSED] - roomID = get(0).toString(): null&#xD;
&#xD;
2020-06-23 20:05:48 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:50 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:50 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/session")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:53 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:05:53 - [TEST_STEP][PASSED] - platform.Session.searchByRoomID(roomID): platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:05:57 - [MESSAGE][PASSED] - Text '1980637' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-23 20:06:00 - [MESSAGE][PASSED] - platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:06:00 - [TEST_STEP][PASSED] - verifyTextPresent(roomID, false, STOP_ON_FAILURE): Text '1980637' is present on page &#xD;
&#xD;
2020-06-23 20:06:03 - [MESSAGE][PASSED] - Text '1980637' is present on page &#xD;
&#xD;
2020-06-23 20:06:03 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":roomID])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:06:05 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:06:05 - [TEST_STEP][PASSED] - sendKeys(findTestObject("NewRepo2/inputSessionSearch"), toBeSearched): Keys 'card abroad charges?' sent to object: 'Object Repository/NewRepo2/inputSessionSearch'&#xD;
&#xD;
2020-06-23 20:06:10 - [MESSAGE][PASSED] - Keys 'card abroad charges?' sent to object: 'Object Repository/NewRepo2/inputSessionSearch'&#xD;
&#xD;
2020-06-23 20:06:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/textHighlight"), "card abroad charges?", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/textHighlight' are matched.&#xD;
&#xD;
2020-06-23 20:06:13 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/textHighlight' are matched.</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Taskbot/partialMatchResponseConfiguration_Test" classname="Test Cases/Taskbot/partialMatchResponseConfiguration_Test" status="PASSED">
            <system-out>2020-06-23 20:06:13 - [TEST_CASE][PASSED] - Test Cases/Taskbot/partialMatchResponseConfiguration_Test: Test Cases/Taskbot/partialMatchResponseConfiguration_Test&#xD;
&#xD;
2020-06-23 20:06:13 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-23 20:06:13 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:06:13 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-23 20:06:15 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-23 20:06:15 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-23 20:06:28 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:06:28 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-23 20:06:30 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-23 20:06:30 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:06:30 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-23 20:06:30 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:06:33 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:06:33 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), PASSWORD): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:06:36 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:06:36 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:06:38 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:06:38 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:06:56 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:06:56 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:06:56 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Task bots", TASK_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:06:58 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:07:00 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-23 20:07:03 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:07:03 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_Task"): null&#xD;
&#xD;
2020-06-23 20:07:04 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/response")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:10 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:10 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Partial match "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:13 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:13 - [TEST_STEP][PASSED] - setText(findTestObject("Input/textResponse"), testData.getValue("partial_match_message", 1), STOP_ON_FAILURE): Text 'Sorry but I'm unable to comprehend your intent. Following are the list of relevant intent to your query, please select one if you find it similar to what you are looking for.' is set on object 'Object Repository/Input/textResponse'&#xD;
&#xD;
2020-06-23 20:07:21 - [MESSAGE][PASSED] - Text 'Sorry but I'm unable to comprehend your intent. Following are the list of relevant intent to your query, please select one if you find it similar to what you are looking for.' is set on object 'Object Repository/Input/textResponse'&#xD;
&#xD;
2020-06-23 20:07:21 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/refresh")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:23 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:23 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/training")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:25 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/webObjectWithText", ["textValue":"report_complain"]), 30, OPTIONAL): Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-23 20:07:27 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-23 20:07:27 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"report_complain"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:29 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:29 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), "how can you help"): Keys 'how can you help' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:07:32 - [MESSAGE][PASSED] - Keys 'how can you help' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:07:32 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:34 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:34 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:37 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:37 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:39 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:39 - [TEST_STEP][PASSED] - platform.Method.trainAndComment(findTestData("Data Files/testData_Task").getValue("comment", 7)): platform.Method.trainAndComment is PASSED&#xD;
&#xD;
2020-06-23 20:07:47 - [MESSAGE][PASSED] - Keys 'test for partial match' sent to object: 'Object Repository/Input/comment'&#xD;
&#xD;
2020-06-23 20:07:50 - [MESSAGE][PASSED] - platform.Method.trainAndComment is PASSED&#xD;
&#xD;
2020-06-23 20:07:50 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 60, OPTIONAL): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-06-23 20:07:52 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-06-23 20:07:52 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:55 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:07:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER)): Keys 'ENTER + how can you help' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-23 20:07:58 - [MESSAGE][PASSED] - Keys 'ENTER + how can you help' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-23 20:07:58 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":2]), testData.getValue("partial_match_message", 1), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-23 20:08:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-23 20:08:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/upvote")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:08:02 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Taskbot/encryptionOnCurationAndSessions_Test" classname="Test Cases/Taskbot/encryptionOnCurationAndSessions_Test" status="PASSED">
            <system-out>2020-06-23 20:08:02 - [TEST_CASE][PASSED] - Test Cases/Taskbot/encryptionOnCurationAndSessions_Test: Test Cases/Taskbot/encryptionOnCurationAndSessions_Test&#xD;
&#xD;
2020-06-23 20:08:03 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-23 20:08:03 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:08:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-23 20:08:05 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-23 20:08:05 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-23 20:08:16 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:08:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-23 20:08:19 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-23 20:08:20 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:08:20 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-23 20:08:20 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:08:23 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:08:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), PASSWORD): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:08:25 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:08:25 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:08:28 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:08:28 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:08:46 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:08:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:08:46 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Task bots", TASK_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:08:47 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:08:50 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-23 20:08:52 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:08:52 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Button/updateBot"), 30, STOP_ON_FAILURE): Object 'Object Repository/Button/updateBot' is present&#xD;
&#xD;
2020-06-23 20:08:57 - [MESSAGE][PASSED] - Object 'Object Repository/Button/updateBot' is present&#xD;
&#xD;
2020-06-23 20:08:57 - [TEST_STEP][PASSED] - platform.Method.enableADP(true): platform.Method.enableADP is PASSED&#xD;
&#xD;
2020-06-23 20:09:08 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-06-23 20:09:08 - [MESSAGE][PASSED] - platform.Method.enableADP is PASSED&#xD;
&#xD;
2020-06-23 20:09:08 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_Task"): null&#xD;
&#xD;
2020-06-23 20:09:09 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("Generic/session")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:12 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/session' is clicked on&#xD;
&#xD;
2020-06-23 20:09:12 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:12 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("NewRepo2/adpLock"), 20, STOP_ON_FAILURE): Object 'Object Repository/NewRepo2/adpLock' is present&#xD;
&#xD;
2020-06-23 20:09:13 - [MESSAGE][PASSED] - Object 'Object Repository/NewRepo2/adpLock' is present&#xD;
&#xD;
2020-06-23 20:09:13 - [TEST_STEP][PASSED] - verifyTextPresent(ADP_TEXT_VALUE, false, STOP_ON_FAILURE): Text 'All the sessions are encrypted, use the decryption key to view individual session of interest' is present on page &#xD;
&#xD;
2020-06-23 20:09:18 - [MESSAGE][PASSED] - Text 'All the sessions are encrypted, use the decryption key to view individual session of interest' is present on page &#xD;
&#xD;
2020-06-23 20:09:18 - [TEST_STEP][PASSED] - verifyTextPresent(testData.getValue("room_id", 1), false, OPTIONAL): Text '1980596' is present on page &#xD;
&#xD;
2020-06-23 20:09:22 - [MESSAGE][PASSED] - Text '1980596' is present on page &#xD;
&#xD;
2020-06-23 20:09:22 - [TEST_STEP][PASSED] - platform.Session.decryptSession(testData.getValue("room_id", 1)): platform.Session.decryptSession is PASSED&#xD;
&#xD;
2020-06-23 20:09:26 - [MESSAGE][PASSED] - Text '1980596' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-23 20:09:29 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-23 20:09:34 - [MESSAGE][PASSED] - Keys 'TEST' sent to object: 'Object Repository/Input/key'&#xD;
&#xD;
2020-06-23 20:09:36 - [MESSAGE][PASSED] - platform.Session.decryptSession is PASSED&#xD;
&#xD;
2020-06-23 20:09:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/closePopup")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:40 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/curation")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:43 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Issues"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:46 - [TEST_STEP][PASSED] - inputKey = modifyObjectProperty(findTestObject("Input/key"), "xpath", "not equals", "//input[@name='qtext']", true): Modify property of object successfully&#xD;
&#xD;
2020-06-23 20:09:46 - [MESSAGE][PASSED] - Modify property of object successfully&#xD;
&#xD;
2020-06-23 20:09:46 - [TEST_STEP][PASSED] - setText(inputKey, "test"): Text 'test' is set on object 'Object Repository/Input/key'&#xD;
&#xD;
2020-06-23 20:09:49 - [MESSAGE][PASSED] - Text 'test' is set on object 'Object Repository/Input/key'&#xD;
&#xD;
2020-06-23 20:09:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("ICONS/unlock")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:52 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:09:52 - [TEST_STEP][PASSED] - trainBtn = modifyObjectProperty(findTestObject("Button/train"), "xpath", "not equals", "//span[text()=' Train ']", true): Modify property of object successfully&#xD;
&#xD;
2020-06-23 20:09:52 - [MESSAGE][PASSED] - Modify property of object successfully&#xD;
&#xD;
2020-06-23 20:09:52 - [TEST_STEP][PASSED] - if (verifyTextPresent("Saved corpus", false, OPTIONAL)): Text 'Saved corpus' is not present on page  (Root cause: com.kms.katalon.core.exception.StepFailedException: Text 'Saved corpus' is not present on page &#xD;
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)&#xD;
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)&#xD;
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)&#xD;
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1677)&#xD;
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$5.call(Unknown Source)&#xD;
	at encryptionOnCurationAndSessions_Test.run(encryptionOnCurationAndSessions_Test:52)&#xD;
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xD;
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)&#xD;
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)&#xD;
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)&#xD;
	at TempTestSuite1592922681158.run(TempTestSuite1592922681158.groovy:35)&#xD;
)&#xD;
&#xD;
2020-06-23 20:09:59 - [MESSAGE][WARNING] - Text 'Saved corpus' is not present on page  (Root cause: com.kms.katalon.core.exception.StepFailedException: Text 'Saved corpus' is not present on page &#xD;
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.doCall(VerifyTextPresentKeyword.groovy:79)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword$_verifyTextPresent_closure1.call(VerifyTextPresentKeyword.groovy)&#xD;
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.verifyTextPresent(VerifyTextPresentKeyword.groovy:83)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyTextPresentKeyword.execute(VerifyTextPresentKeyword.groovy:68)&#xD;
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)&#xD;
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyTextPresent(WebUiBuiltInKeywords.groovy:1677)&#xD;
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyTextPresent$5.call(Unknown Source)&#xD;
	at encryptionOnCurationAndSessions_Test.run(encryptionOnCurationAndSessions_Test:52)&#xD;
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xD;
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)&#xD;
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)&#xD;
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)&#xD;
	at TempTestSuite1592922681158.run(TempTestSuite1592922681158.groovy:35)&#xD;
)&#xD;
&#xD;
2020-06-23 20:09:59 - [TEST_STEP][PASSED] - else: Text 'Trained corpus' is present on page &#xD;
&#xD;
2020-06-23 20:09:59 - [TEST_STEP][PASSED] - verifyTextPresent("Trained corpus", false, STOP_ON_FAILURE): Text 'Trained corpus' is present on page &#xD;
&#xD;
2020-06-23 20:10:03 - [MESSAGE][PASSED] - Text 'Trained corpus' is present on page &#xD;
&#xD;
2020-06-23 20:10:03 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/dashboard")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:09 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:13 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:13 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/signOut")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:16 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:10:16 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-23 20:10:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:10:19 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:10:19 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), PASSWORD): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:10:22 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:10:22 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:10:24 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:10:24 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:10:36 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:10:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:10:36 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Task bots", TASK_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:10:37 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:10:40 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-23 20:10:43 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:10:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/session")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:10:46 - [TEST_STEP][PASSED] - platform.Session.searchByRoomID(testData.getValue("room_id", 1)): platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:10:50 - [MESSAGE][PASSED] - Text '1980596' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-23 20:10:52 - [MESSAGE][PASSED] - platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-23 20:10:52 - [TEST_STEP][PASSED] - verifyElementNotPresent(findTestObject("NewRepo2/unlockIcon"), 10, STOP_ON_FAILURE): Web element with id: 'Object Repository/NewRepo2/unlockIcon' located by 'By.xpath: //mat-icon[@name='lock_open']' is not present after '10' second(s)&#xD;
&#xD;
2020-06-23 20:10:53 - [MESSAGE][PASSED] - Web element with id: 'Object Repository/NewRepo2/unlockIcon' located by 'By.xpath: //mat-icon[@name='lock_open']' is not present after '10' second(s)</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Taskbot/globalSearchOnTraining_Test" classname="Test Cases/Taskbot/globalSearchOnTraining_Test" status="PASSED">
            <system-out>2020-06-23 20:10:53 - [TEST_CASE][PASSED] - Test Cases/Taskbot/globalSearchOnTraining_Test: Test Cases/Taskbot/globalSearchOnTraining_Test&#xD;
&#xD;
2020-06-23 20:10:53 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-23 20:10:53 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:10:53 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-23 20:10:55 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-23 20:10:55 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-23 20:11:06 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-06-23 20:11:06 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-23 20:11:08 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-23 20:11:09 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:11:09 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-23 20:11:09 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:11:12 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-23 20:11:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), PASSWORD): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:11:15 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-23 20:11:15 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:11:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-23 20:11:17 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:11:34 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:11:34 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-23 20:11:34 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Task bots", NONE_INTENT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:11:35 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-23 20:11:38 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-23 20:11:40 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-23 20:11:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/training")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:11:44 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:11:44 - [TEST_STEP][PASSED] - newData = findTestData("Data Files/testData_Dummy"): null&#xD;
&#xD;
2020-06-23 20:11:45 - [TEST_STEP][PASSED] - for ([count = 1, count &lt;= newData.getRowNumbers(), (count++)]): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:11:45 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:11:45 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:11:47 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:11:47 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'xcv1231' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:11:50 - [MESSAGE][PASSED] - Keys 'xcv1231' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:11:50 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'xcxvxc' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:11:53 - [MESSAGE][PASSED] - Keys 'xcxvxc' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:11:53 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:11:55 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:11:55 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Agent handover' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:11:58 - [MESSAGE][PASSED] - Keys 'Agent handover' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:11:58 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:00 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:03 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:03 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:04 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:04 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:04 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:06 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:06 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys '12asaasdas' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:12:09 - [MESSAGE][PASSED] - Keys '12asaasdas' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:12:09 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'asdasda' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:12:11 - [MESSAGE][PASSED] - Keys 'asdasda' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:12:11 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:14 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:14 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Partial match' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:12:17 - [MESSAGE][PASSED] - Keys 'Partial match' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:12:17 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:19 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:19 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:21 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:21 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:22 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:22 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'dfrvdcw' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:12:27 - [MESSAGE][PASSED] - Keys 'dfrvdcw' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:12:27 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys '234dsf2e2eqf' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:12:30 - [MESSAGE][PASSED] - Keys '234dsf2e2eqf' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:12:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:32 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:32 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Help message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:12:35 - [MESSAGE][PASSED] - Keys 'Help message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:12:35 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:37 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:37 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:40 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:40 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:41 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:41 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:41 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:43 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:43 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'bnmvbhjkito8ughkf7' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:12:46 - [MESSAGE][PASSED] - Keys 'bnmvbhjkito8ughkf7' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:12:46 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'rwb64w756fdbsebqrvqe' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:12:49 - [MESSAGE][PASSED] - Keys 'rwb64w756fdbsebqrvqe' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:12:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:51 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Fallback message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:12:54 - [MESSAGE][PASSED] - Keys 'Fallback message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:12:54 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:56 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:56 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:12:58 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:59 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:59 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:12:59 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:02 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:02 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'bgrt4vedvf' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:13:04 - [MESSAGE][PASSED] - Keys 'bgrt4vedvf' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:13:04 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'a423sdgq34gq4sda' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:13:07 - [MESSAGE][PASSED] - Keys 'a423sdgq34gq4sda' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:13:07 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:09 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Help message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:13:12 - [MESSAGE][PASSED] - Keys 'Help message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:13:12 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:15 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:15 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:17 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:17 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:18 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:18 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:18 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:20 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:20 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'hjkgfhgfhf' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:13:23 - [MESSAGE][PASSED] - Keys 'hjkgfhgfhf' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:13:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'aasfdsfsd' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:13:26 - [MESSAGE][PASSED] - Keys 'aasfdsfsd' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:13:26 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:28 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:13:31 - [MESSAGE][PASSED] - Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:13:31 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:35 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:35 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:36 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:36 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:39 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:39 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'bnmbnm' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:13:41 - [MESSAGE][PASSED] - Keys 'bnmbnm' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:13:41 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'bnmbn3413412' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:13:44 - [MESSAGE][PASSED] - Keys 'bnmbn3413412' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:13:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:46 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Fallback message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:13:49 - [MESSAGE][PASSED] - Keys 'Fallback message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:13:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:54 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:55 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:55 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:13:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:57 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:13:57 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'tyutyuttr' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:00 - [MESSAGE][PASSED] - Keys 'tyutyuttr' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:00 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'tyutyvbnvbfghrt' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:02 - [MESSAGE][PASSED] - Keys 'tyutyvbnvbfghrt' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:02 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:04 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:04 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:14:07 - [MESSAGE][PASSED] - Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:14:07 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:10 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:10 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:12 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:12 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:13 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:13 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:13 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:15 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:15 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'yuiyuuioui' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:18 - [MESSAGE][PASSED] - Keys 'yuiyuuioui' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'gjhjuiyu3425675673' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:20 - [MESSAGE][PASSED] - Keys 'gjhjuiyu3425675673' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:20 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:23 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:14:26 - [MESSAGE][PASSED] - Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:14:26 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:28 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:30 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:31 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:31 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:31 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:34 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:34 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'asdasasdas' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:36 - [MESSAGE][PASSED] - Keys 'asdasasdas' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'asdasdasdasdas123' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:39 - [MESSAGE][PASSED] - Keys 'asdasdasdasdas123' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:39 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:41 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Help message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:14:44 - [MESSAGE][PASSED] - Keys 'Help message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:14:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:49 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:50 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:50 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:14:50 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:52 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:52 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'asda' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:54 - [MESSAGE][PASSED] - Keys 'asda' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:14:54 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'asdas46345' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:57 - [MESSAGE][PASSED] - Keys 'asdas46345' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:14:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:59 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:14:59 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:15:02 - [MESSAGE][PASSED] - Keys 'Welcome message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:15:02 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:04 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:04 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:07 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:07 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:08 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:08 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:08 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:10 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:10 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'asdas1245645' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:15:13 - [MESSAGE][PASSED] - Keys 'asdas1245645' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:15:13 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'asdasdghfghghjghdas' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:15:15 - [MESSAGE][PASSED] - Keys 'asdasdghfghghjghdas' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:15:15 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:18 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Fallback message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:15:20 - [MESSAGE][PASSED] - Keys 'Fallback message' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:15:20 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:23 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:23 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:25 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:26 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:26 - [TEST_STEP][PASSED] - if (newData.getValue("intent_name", count) != ""): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:26 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createIntent")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:28 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), newData.getValue("intent_name", count)): Keys 'hgdga' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:15:31 - [MESSAGE][PASSED] - Keys 'hgdga' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-06-23 20:15:31 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/utterance"), newData.getValue("single_utterance", count)): Keys 'asdasd12e' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:15:33 - [MESSAGE][PASSED] - Keys 'asdasd12e' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-06-23 20:15:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addUtterance")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), newData.getValue("final_template_key", count)): Keys 'Partial match' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:15:38 - [MESSAGE][PASSED] - Keys 'Partial match' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-06-23 20:15:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:41 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:43 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-23 20:15:43 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:44 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-23 20:15:44 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/searchIntent"), "1231"): Keys '1231' sent to object: 'Object Repository/Input/searchIntent'&#xD;
&#xD;
2020-06-23 20:15:47 - [MESSAGE][PASSED] - Keys '1231' sent to object: 'Object Repository/Input/searchIntent'&#xD;
&#xD;
2020-06-23 20:15:47 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/listOfIntents"), "xcv1231", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/listOfIntents' are matched.&#xD;
&#xD;
2020-06-23 20:15:49 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/listOfIntents' are matched.&#xD;
&#xD;
2020-06-23 20:15:49 - [TEST_STEP][PASSED] - searchForIntent = findWebElement(findTestObject("Input/searchIntent"), 10): null&#xD;
&#xD;
2020-06-23 20:15:50 - [TEST_STEP][PASSED] - searchForIntent.sendKeys(Keys.chord(CONTROL, "a")): null&#xD;
&#xD;
2020-06-23 20:15:51 - [TEST_STEP][PASSED] - searchForIntent.sendKeys(Keys.chord(DELETE)): null&#xD;
&#xD;
2020-06-23 20:15:52 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/searchUtterance"), "5"): Keys '5' sent to object: 'Object Repository/Input/searchUtterance'&#xD;
&#xD;
2020-06-23 20:15:55 - [MESSAGE][PASSED] - Keys '5' sent to object: 'Object Repository/Input/searchUtterance'&#xD;
&#xD;
2020-06-23 20:15:55 - [TEST_STEP][PASSED] - verifyTextPresent("Help message", false, STOP_ON_FAILURE): Text 'Help message' is present on page &#xD;
&#xD;
2020-06-23 20:15:57 - [MESSAGE][PASSED] - Text 'Help message' is present on page</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2020-06-23 20:01:27 - [TEST_SUITE][INCOMPLETE] - failedTestCases: null</system-out>
        <system-err>2020-06-23 20:01:27 - [TEST_SUITE][INCOMPLETE] - failedTestCases: null</system-err>
    </testsuite>
</testsuites>
