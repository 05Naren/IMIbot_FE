<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="generic" time="856" tests="8" failures="0" errors="0">
    <testsuite name="generic" tests="8" failures="0" errors="0" time="856" timestamp="2020-07-26 11:28:41" hostname="narendra.n - WLPT580.imidomain.com" id="Test Suites/generic">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="D:\\IMIbot.ai-Project\\Reports\\20200726_112818\\generic\\20200726_112823"/>
            <property name="logFiles" value="D:\\IMIbot.ai-Project\\Reports\\20200726_112818\\generic\\20200726_112823\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="narendra.n - WLPT580.imidomain.com"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.3.3.11"/>
            <property name="browser" value="Chrome 84.0.4147.89"/>
            <property name="hostAddress" value="192.168.1.6"/>
            <property name="sessionId" value="cd40512a7b38531c297d59e417ec5876"/>
            <property name="seleniumVersion" value="3.141.59"/>
            <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
            <property name="platform" value="Windows 8.1"/>
        </properties>
        <testcase name="Test Cases/Generic/forgotPasswordLink_Test" classname="Test Cases/Generic/forgotPasswordLink_Test" status="PASSED">
            <system-out>2020-07-26 11:28:44 - [TEST_CASE][PASSED] - Test Cases/Generic/forgotPasswordLink_Test: Test Cases/Generic/forgotPasswordLink_Test&#xD;
&#xD;
2020-07-26 11:28:45 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:28:45 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:28:48 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:28:49 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:28:49 - [MESSAGE][INFO] - Action delay is set to 1 seconds&#xD;
&#xD;
2020-07-26 11:29:06 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:29:06 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:29:09 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:29:09 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("GenericII/changePasswordLink")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:29:12 - [MESSAGE][PASSED] - Object: 'Object Repository/GenericII/changePasswordLink' is clicked on&#xD;
&#xD;
2020-07-26 11:29:12 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:29:12 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/forgetHeader"), "Forgot password?", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/forgetHeader' are matched.&#xD;
&#xD;
2020-07-26 11:29:15 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/forgetHeader' are matched.&#xD;
&#xD;
2020-07-26 11:29:15 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/email"), USERNAME): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/email'&#xD;
&#xD;
2020-07-26 11:29:19 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/email'&#xD;
&#xD;
2020-07-26 11:29:19 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("GenericII/resetEmailBtn"), STOP_ON_FAILURE): Object 'Object Repository/GenericII/resetEmailBtn' is clickable&#xD;
&#xD;
2020-07-26 11:29:21 - [MESSAGE][PASSED] - Object 'Object Repository/GenericII/resetEmailBtn' is clickable&#xD;
&#xD;
2020-07-26 11:29:21 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("GenericII/resetEmailBtn")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:29:24 - [MESSAGE][PASSED] - Object: 'Object Repository/GenericII/resetEmailBtn' is clicked on&#xD;
&#xD;
2020-07-26 11:29:24 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:29:24 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, OPTIONAL): Object 'Object Repository/ICONS/toastMsg' is not present after 20 second(s)&#xD;
&#xD;
2020-07-26 11:29:50 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //simple-snack-bar'. Please recheck the objects properties to make sure the desired element is located. &#xD;
&#xD;
2020-07-26 11:29:50 - [MESSAGE][WARNING] - Object 'Object Repository/ICONS/toastMsg' is not present after 20 second(s)&#xD;
&#xD;
2020-07-26 11:29:50 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("GenericII/emailSentIcon"), 5, OPTIONAL): Object 'Object Repository/GenericII/emailSentIcon' is present&#xD;
&#xD;
2020-07-26 11:29:52 - [MESSAGE][PASSED] - Object 'Object Repository/GenericII/emailSentIcon' is present&#xD;
&#xD;
2020-07-26 11:29:52 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("GenericII/continueToSignInBtn"), STOP_ON_FAILURE): Object 'Object Repository/GenericII/continueToSignInBtn' is clickable&#xD;
&#xD;
2020-07-26 11:29:55 - [MESSAGE][PASSED] - Object 'Object Repository/GenericII/continueToSignInBtn' is clickable&#xD;
&#xD;
2020-07-26 11:29:55 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("GenericII/continueToSignInBtn")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:29:58 - [MESSAGE][PASSED] - Object: 'Object Repository/GenericII/continueToSignInBtn' is clicked on&#xD;
&#xD;
2020-07-26 11:29:58 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/botPageAndHeaderAccess_Test" classname="Test Cases/Generic/botPageAndHeaderAccess_Test" status="PASSED">
            <system-out>2020-07-26 11:29:58 - [TEST_CASE][PASSED] - Test Cases/Generic/botPageAndHeaderAccess_Test: Test Cases/Generic/botPageAndHeaderAccess_Test&#xD;
&#xD;
2020-07-26 11:29:58 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:29:58 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:29:58 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:30:02 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:30:02 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:30:16 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:30:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:30:19 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:30:19 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:30:19 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:30:20 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:30:23 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:30:23 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:30:26 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:30:26 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:30:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:30:29 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:30:46 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:30:46 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:30:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Dashboard"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:30:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:30:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/imiLogo")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:30:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:30:51 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 15, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:30:52 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:30:52 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Knowledge"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:30:57 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:30:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/kbHeader"), "Enterprise Knowledge Base", OPTIONAL): Actual text and expected text of test object 'Object Repository/Generic/kbHeader' are matched.&#xD;
&#xD;
2020-07-26 11:30:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/kbHeader' are matched.&#xD;
&#xD;
2020-07-26 11:30:59 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/imiLogo")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:06 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:06 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 15, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:07 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:07 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Analytics"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:09 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/imiLogo")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:16 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 15, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:18 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:18 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Reports"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:22 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:22 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("Button/newReport"), STOP_ON_FAILURE): Object 'Object Repository/Button/newReport' is clickable&#xD;
&#xD;
2020-07-26 11:31:25 - [MESSAGE][PASSED] - Object 'Object Repository/Button/newReport' is clickable&#xD;
&#xD;
2020-07-26 11:31:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/imiLogo")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:32 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:32 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 15, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:34 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:34 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Task bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:38 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:38 - [TEST_STEP][PASSED] - comment("Verification of Task bots"): Verification of Task bots&#xD;
&#xD;
2020-07-26 11:31:38 - [MESSAGE][INFO] - Verification of Task bots&#xD;
&#xD;
2020-07-26 11:31:38 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 20, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:40 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Smart bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:44 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:44 - [TEST_STEP][PASSED] - comment("Verification of Smart bots"): Verification of Smart bots&#xD;
&#xD;
2020-07-26 11:31:44 - [MESSAGE][INFO] - Verification of Smart bots&#xD;
&#xD;
2020-07-26 11:31:44 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 20, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:46 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Router bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:49 - [TEST_STEP][PASSED] - comment("Verification of Router bots"): Verification of Router bots&#xD;
&#xD;
2020-07-26 11:31:49 - [MESSAGE][INFO] - Verification of Router bots&#xD;
&#xD;
2020-07-26 11:31:49 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 20, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:50 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:50 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Pipeline bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:31:54 - [TEST_STEP][PASSED] - comment("Verification of Pipeline bots"): Verification of Pipeline bots&#xD;
&#xD;
2020-07-26 11:31:54 - [MESSAGE][INFO] - Verification of Pipeline bots&#xD;
&#xD;
2020-07-26 11:31:54 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Button/createBot"), 20, STOP_ON_FAILURE): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:31:55 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/adminUserDetailsAndEnterpriseOption_Test" classname="Test Cases/Generic/adminUserDetailsAndEnterpriseOption_Test" status="PASSED">
            <system-out>2020-07-26 11:31:55 - [TEST_CASE][PASSED] - Test Cases/Generic/adminUserDetailsAndEnterpriseOption_Test: Test Cases/Generic/adminUserDetailsAndEnterpriseOption_Test&#xD;
&#xD;
2020-07-26 11:31:55 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:31:55 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:31:55 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:32:03 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:32:03 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:32:16 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:32:16 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:32:18 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:32:19 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:32:19 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:32:19 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:32:22 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:32:22 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:32:26 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:32:26 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:32:29 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:32:29 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:32:48 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:32:48 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:32:48 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/enterpriseName"), ENTERPRISE_NAME, OPTIONAL): Actual text and expected text of test object 'Object Repository/Generic/enterpriseName' are matched.&#xD;
&#xD;
2020-07-26 11:32:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/enterpriseName' are matched.&#xD;
&#xD;
2020-07-26 11:32:51 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/userDesgination"), USER_DESIGNATION, OPTIONAL): Actual text and expected text of test object 'Object Repository/Generic/userDesgination' are matched.&#xD;
&#xD;
2020-07-26 11:32:54 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/userDesgination' are matched.&#xD;
&#xD;
2020-07-26 11:32:54 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Generic/enterpriseIcon"), 5, STOP_ON_FAILURE): Object 'Object Repository/Generic/enterpriseIcon' is present&#xD;
&#xD;
2020-07-26 11:32:55 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/enterpriseIcon' is present&#xD;
&#xD;
2020-07-26 11:32:55 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/userInitials"), USER_INITIALS, STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/userInitials' are matched.&#xD;
&#xD;
2020-07-26 11:32:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/userInitials' are matched.&#xD;
&#xD;
2020-07-26 11:32:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:32:59 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:32:59 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/eProfile")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:33:04 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:33:04 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Generic/updateBtn"), 15, STOP_ON_FAILURE): Object 'Object Repository/Generic/updateBtn' is present&#xD;
&#xD;
2020-07-26 11:33:06 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/updateBtn' is present&#xD;
&#xD;
2020-07-26 11:33:06 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:33:10 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:33:10 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/signOut")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:33:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:33:16 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/textOnLoginPage"), testValue, STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/textOnLoginPage' are matched.&#xD;
&#xD;
2020-07-26 11:33:18 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/textOnLoginPage' are matched.</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/adminServiceKeyFunctionality_Test" classname="Test Cases/Generic/adminServiceKeyFunctionality_Test" status="PASSED">
            <system-out>2020-07-26 11:33:18 - [TEST_CASE][PASSED] - Test Cases/Generic/adminServiceKeyFunctionality_Test: Test Cases/Generic/adminServiceKeyFunctionality_Test&#xD;
&#xD;
2020-07-26 11:33:18 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:33:18 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:33:18 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:33:26 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:33:26 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:33:40 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:33:40 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:33:42 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:33:43 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:33:43 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:33:43 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:33:46 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:33:46 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:33:49 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:33:49 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:33:51 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:33:51 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:34:09 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:34:09 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:34:09 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:12 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:12 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Enterprise profile"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:16 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/newToken")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:19 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:19 - [TEST_STEP][PASSED] - description = now().toString(): null&#xD;
&#xD;
2020-07-26 11:34:21 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/newTokenDescription"), description): Keys '2020-07-26' sent to object: 'Object Repository/Input/newTokenDescription'&#xD;
&#xD;
2020-07-26 11:34:24 - [MESSAGE][PASSED] - Keys '2020-07-26' sent to object: 'Object Repository/Input/newTokenDescription'&#xD;
&#xD;
2020-07-26 11:34:24 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/create")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:26 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:26 - [TEST_STEP][PASSED] - listOfServiceKeys = findWebElements(findTestObject("GenericII/serviceKeyList"), 5): null&#xD;
&#xD;
2020-07-26 11:34:30 - [TEST_STEP][PASSED] - assert getText().contentEquals(description) == true: null&#xD;
&#xD;
2020-07-26 11:34:31 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/deleteServiceKey", ["index":1])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/expire")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:36 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("Generic/webObjectWithText", ["textValue":"Expired"])): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:39 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/webObjectWithText' is clicked on&#xD;
&#xD;
2020-07-26 11:34:39 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-07-26 11:34:39 - [TEST_STEP][PASSED] - listOfExpiredServiceKeys = findWebElements(findTestObject("GenericII/serviceKeyList"), 5): null&#xD;
&#xD;
2020-07-26 11:34:40 - [TEST_STEP][PASSED] - assert getText().contentEquals(description) == true: null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/adminUserManagement_Test" classname="Test Cases/Generic/adminUserManagement_Test" status="PASSED">
            <system-out>2020-07-26 11:34:41 - [TEST_CASE][PASSED] - Test Cases/Generic/adminUserManagement_Test: Test Cases/Generic/adminUserManagement_Test&#xD;
&#xD;
2020-07-26 11:34:41 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:34:41 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:34:41 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:34:49 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:34:49 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:34:59 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:34:59 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:35:01 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:35:02 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:35:02 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:35:03 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:35:06 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:35:06 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:35:13 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:35:13 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:35:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:35:16 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:35:36 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:35:36 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:35:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:38 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Enterprise profile"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Users"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:49 - [TEST_STEP][PASSED] - verifyTextPresent("Users management", false, STOP_ON_FAILURE): Text 'Users management' is present on page &#xD;
&#xD;
2020-07-26 11:35:56 - [MESSAGE][PASSED] - Text 'Users management' is present on page &#xD;
&#xD;
2020-07-26 11:35:56 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/newUserBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:35:58 - [TEST_STEP][PASSED] - verifyTextPresent("Add a new user to the enterprise", false, STOP_ON_FAILURE): Text 'Add a new user to the enterprise' is present on page &#xD;
&#xD;
2020-07-26 11:36:05 - [MESSAGE][PASSED] - Text 'Add a new user to the enterprise' is present on page &#xD;
&#xD;
2020-07-26 11:36:05 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/newUserFirstName"), firstName): Keys 'JIMMY' sent to object: 'Object Repository/Input/newUserFirstName'&#xD;
&#xD;
2020-07-26 11:36:08 - [MESSAGE][PASSED] - Keys 'JIMMY' sent to object: 'Object Repository/Input/newUserFirstName'&#xD;
&#xD;
2020-07-26 11:36:08 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/newUserLastName"), lastName): Keys 'HONDRIX' sent to object: 'Object Repository/Input/newUserLastName'&#xD;
&#xD;
2020-07-26 11:36:13 - [MESSAGE][PASSED] - Keys 'HONDRIX' sent to object: 'Object Repository/Input/newUserLastName'&#xD;
&#xD;
2020-07-26 11:36:13 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Select role"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:36:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:36:16 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":" " + USER_ROLE + " "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:36:18 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:36:18 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/newUserEmail"), emailAddress): Keys 'jimihondrix5@gmail.com' sent to object: 'Object Repository/Input/newUserEmail'&#xD;
&#xD;
2020-07-26 11:36:24 - [MESSAGE][PASSED] - Keys 'jimihondrix5@gmail.com' sent to object: 'Object Repository/Input/newUserEmail'&#xD;
&#xD;
2020-07-26 11:36:24 - [TEST_STEP][PASSED] - verifyTextPresent("Add Bots", false, OPTIONAL): Text 'Add Bots' is present on page &#xD;
&#xD;
2020-07-26 11:36:31 - [MESSAGE][PASSED] - Text 'Add Bots' is present on page &#xD;
&#xD;
2020-07-26 11:36:31 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/addNewUser")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:36:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/adminUserDeletion_Test" classname="Test Cases/Generic/adminUserDeletion_Test" status="PASSED">
            <system-out>2020-07-26 11:36:33 - [TEST_CASE][PASSED] - Test Cases/Generic/adminUserDeletion_Test: Test Cases/Generic/adminUserDeletion_Test&#xD;
&#xD;
2020-07-26 11:36:33 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:36:33 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:36:33 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:36:36 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:36:36 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:36:50 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:36:50 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:36:53 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:36:53 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:36:53 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:36:53 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:36:56 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:36:56 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:36:58 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:36:58 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:37:01 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:37:01 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:37:29 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:37:29 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:37:29 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:32 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:32 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Enterprise profile"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:38 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Users"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:42 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:42 - [TEST_STEP][PASSED] - flag = false: null&#xD;
&#xD;
2020-07-26 11:37:42 - [TEST_STEP][PASSED] - index = &lt;not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression&gt;: null&#xD;
&#xD;
2020-07-26 11:37:42 - [TEST_STEP][PASSED] - while (flag != true): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:37:42 - [TEST_STEP][PASSED] - listElement = findWebElements(findTestObject("GenericII/listOfUserName"), 10): null&#xD;
&#xD;
2020-07-26 11:37:46 - [TEST_STEP][PASSED] - for ([index = 0, index &lt; listElement.size(), (index++)]): null&#xD;
&#xD;
2020-07-26 11:37:46 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:47 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:48 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:50 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:51 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:52 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:53 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:54 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:56 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:57 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:37:58 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/nextPage"), 15): Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:00 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nextPage")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:03 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:03 - [TEST_STEP][PASSED] - listElement = findWebElements(findTestObject("GenericII/listOfUserName"), 10): null&#xD;
&#xD;
2020-07-26 11:38:04 - [TEST_STEP][PASSED] - for ([index = 0, index &lt; listElement.size(), (index++)]): null&#xD;
&#xD;
2020-07-26 11:38:04 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:05 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:06 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:07 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:08 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:10 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:11 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:12 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:13 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:14 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:15 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/nextPage"), 15): Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:18 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:18 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nextPage")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:21 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:21 - [TEST_STEP][PASSED] - listElement = findWebElements(findTestObject("GenericII/listOfUserName"), 10): null&#xD;
&#xD;
2020-07-26 11:38:22 - [TEST_STEP][PASSED] - for ([index = 0, index &lt; listElement.size(), (index++)]): null&#xD;
&#xD;
2020-07-26 11:38:22 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:23 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:24 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:25 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:26 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:27 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:28 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:30 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:31 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:32 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:33 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/nextPage"), 15): Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:34 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:34 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nextPage")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:37 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:37 - [TEST_STEP][PASSED] - listElement = findWebElements(findTestObject("GenericII/listOfUserName"), 10): null&#xD;
&#xD;
2020-07-26 11:38:38 - [TEST_STEP][PASSED] - for ([index = 0, index &lt; listElement.size(), (index++)]): null&#xD;
&#xD;
2020-07-26 11:38:38 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:39 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:41 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:42 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:43 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:44 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:45 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:46 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:47 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:48 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:50 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/nextPage"), 15): Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:51 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:38:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nextPage")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:38:54 - [TEST_STEP][PASSED] - listElement = findWebElements(findTestObject("GenericII/listOfUserName"), 10): null&#xD;
&#xD;
2020-07-26 11:38:55 - [TEST_STEP][PASSED] - for ([index = 0, index &lt; listElement.size(), (index++)]): null&#xD;
&#xD;
2020-07-26 11:38:55 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:56 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:57 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:38:59 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:39:00 - [TEST_STEP][PASSED] - if (getText().contentEquals(username)): null&#xD;
&#xD;
2020-07-26 11:39:01 - [TEST_STEP][PASSED] - flag = true: null&#xD;
&#xD;
2020-07-26 11:39:01 - [TEST_STEP][PASSED] - (index++): null&#xD;
&#xD;
2020-07-26 11:39:01 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-07-26 11:39:01 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/nextPage"), 15): Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:39:02 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/nextPage' is present&#xD;
&#xD;
2020-07-26 11:39:02 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nextPage")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:39:05 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:39:05 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("GenericII/unverifiedUserIcon", ["email":email]), 5, STOP_ON_FAILURE): Object 'Object Repository/GenericII/unverifiedUserIcon' is present&#xD;
&#xD;
2020-07-26 11:39:06 - [MESSAGE][PASSED] - Object 'Object Repository/GenericII/unverifiedUserIcon' is present&#xD;
&#xD;
2020-07-26 11:39:06 - [TEST_STEP][PASSED] - listOfUsers = findWebElements(findTestObject("GenericII/listOfUserName"), 5): null&#xD;
&#xD;
2020-07-26 11:39:07 - [TEST_STEP][PASSED] - sizeOfOriginalList = listOfUsers.size(): null&#xD;
&#xD;
2020-07-26 11:39:07 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/deleteUserBtn", ["index":index])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:39:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:39:09 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/remove")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:39:12 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:39:12 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, OPTIONAL): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-07-26 11:39:15 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-07-26 11:39:15 - [TEST_STEP][PASSED] - newListOfUsers = findWebElements(findTestObject("GenericII/listOfUserName"), 5): null&#xD;
&#xD;
2020-07-26 11:39:16 - [TEST_STEP][PASSED] - assert newListOfUsers.size() &lt; sizeOfOriginalList: null</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/adminRoleManagement_Test" classname="Test Cases/Generic/adminRoleManagement_Test" status="PASSED">
            <system-out>2020-07-26 11:39:16 - [TEST_CASE][PASSED] - Test Cases/Generic/adminRoleManagement_Test: Test Cases/Generic/adminRoleManagement_Test&#xD;
&#xD;
2020-07-26 11:39:16 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:39:16 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:39:16 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:39:28 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:39:28 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:39:41 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:39:41 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:39:44 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:39:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:39:45 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:39:45 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:39:48 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:39:48 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:39:52 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:39:52 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:39:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:39:55 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:40:14 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:40:14 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:40:14 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:17 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:17 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Enterprise profile"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Roles"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:28 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("Button/newRole"), STOP_ON_FAILURE): Object 'Object Repository/Button/newRole' is clickable&#xD;
&#xD;
2020-07-26 11:40:30 - [MESSAGE][PASSED] - Object 'Object Repository/Button/newRole' is clickable&#xD;
&#xD;
2020-07-26 11:40:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/newRole")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:34 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:34 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/newRoleName"), ROLE_NAME): Keys 'Custom Role' sent to object: 'Object Repository/Input/newRoleName'&#xD;
&#xD;
2020-07-26 11:40:38 - [MESSAGE][PASSED] - Keys 'Custom Role' sent to object: 'Object Repository/Input/newRoleName'&#xD;
&#xD;
2020-07-26 11:40:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Base role"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:41 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":typeOfUser])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:44 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":permissionToUser])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:47 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:47 - [TEST_STEP][PASSED] - listOfPermissions = findWebElements(findTestObject("GenericII/listOfPermissions"), 5): null&#xD;
&#xD;
2020-07-26 11:40:48 - [TEST_STEP][PASSED] - index = &lt;not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression&gt;: null&#xD;
&#xD;
2020-07-26 11:40:48 - [TEST_STEP][PASSED] - for ([index = 0, index &lt; listOfPermissions.size(), (index++)]): null&#xD;
&#xD;
2020-07-26 11:40:48 - [TEST_STEP][PASSED] - getText().contains(nameOfThePermission): null&#xD;
&#xD;
2020-07-26 11:40:49 - [TEST_STEP][PASSED] - (index++): null&#xD;
&#xD;
2020-07-26 11:40:49 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-07-26 11:40:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/addPermissionBtn", ["index":index])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:53 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:53 - [TEST_STEP][PASSED] - verifyElementClickable(findTestObject("Button/createRole"), STOP_ON_FAILURE): Object 'Object Repository/Button/createRole' is clickable&#xD;
&#xD;
2020-07-26 11:40:55 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createRole' is clickable&#xD;
&#xD;
2020-07-26 11:40:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createRole")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:40:58 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/webObjectWithText", ["textValue":ROLE_NAME]), 20, OPTIONAL): Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-07-26 11:41:01 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-07-26 11:41:01 - [TEST_STEP][PASSED] - verifyTextPresent(ROLE_NAME, false): Text 'Custom Role' is present on page &#xD;
&#xD;
2020-07-26 11:41:03 - [MESSAGE][PASSED] - Text 'Custom Role' is present on page</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Generic/adminRoleDeletion_Test" classname="Test Cases/Generic/adminRoleDeletion_Test" status="PASSED">
            <system-out>2020-07-26 11:41:03 - [TEST_CASE][PASSED] - Test Cases/Generic/adminRoleDeletion_Test: Test Cases/Generic/adminRoleDeletion_Test&#xD;
&#xD;
2020-07-26 11:41:04 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-07-26 11:41:04 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:41:04 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-07-26 11:41:33 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-07-26 11:41:33 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-07-26 11:41:49 - [MESSAGE][PASSED] - Browser is opened with url: 'preprod.imibot.ai'&#xD;
&#xD;
2020-07-26 11:41:49 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-07-26 11:41:51 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-07-26 11:41:52 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:41:53 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-07-26 11:41:54 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:41:57 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-07-26 11:41:57 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:42:00 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-07-26 11:42:00 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:42:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-07-26 11:42:03 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:42:23 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-07-26 11:42:23 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-07-26 11:42:23 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/enterpriseDropdown")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Enterprise profile"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:32 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:32 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Roles"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:35 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:35 - [TEST_STEP][PASSED] - role = findWebElements(findTestObject("GenericII/listOfAllRoleName"), 5): null&#xD;
&#xD;
2020-07-26 11:42:36 - [TEST_STEP][PASSED] - count = &lt;not implemented yet for class: org.codehaus.groovy.ast.expr.EmptyExpression&gt;: null&#xD;
&#xD;
2020-07-26 11:42:36 - [TEST_STEP][PASSED] - for ([count = 0, count &lt; role.size(), (count++)]): null&#xD;
&#xD;
2020-07-26 11:42:36 - [TEST_STEP][PASSED] - if (getText().contentEquals(ROLE_NAME)): null&#xD;
&#xD;
2020-07-26 11:42:37 - [TEST_STEP][PASSED] - if (getText().contentEquals(ROLE_NAME)): null&#xD;
&#xD;
2020-07-26 11:42:38 - [TEST_STEP][PASSED] - if (getText().contentEquals(ROLE_NAME)): null&#xD;
&#xD;
2020-07-26 11:42:40 - [TEST_STEP][PASSED] - if (getText().contentEquals(ROLE_NAME)): null&#xD;
&#xD;
2020-07-26 11:42:41 - [TEST_STEP][PASSED] - if (getText().contentEquals(ROLE_NAME)): null&#xD;
&#xD;
2020-07-26 11:42:42 - [TEST_STEP][PASSED] - if (getText().contentEquals(ROLE_NAME)): null&#xD;
&#xD;
2020-07-26 11:42:43 - [TEST_STEP][PASSED] - (count++): null&#xD;
&#xD;
2020-07-26 11:42:43 - [TEST_STEP][PASSED] - markPassed("ROLE FOUND IN THE LIST"): ROLE FOUND IN THE LIST&#xD;
&#xD;
2020-07-26 11:42:43 - [MESSAGE][PASSED] - ROLE FOUND IN THE LIST&#xD;
&#xD;
2020-07-26 11:42:43 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-07-26 11:42:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/modifyRole", ["index":count])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:46 - [TEST_STEP][PASSED] - verifyTextPresent("Edit role", false, STOP_ON_FAILURE): Text 'Edit role' is present on page &#xD;
&#xD;
2020-07-26 11:42:49 - [MESSAGE][PASSED] - Text 'Edit role' is present on page &#xD;
&#xD;
2020-07-26 11:42:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/delete")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:52 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:52 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/remove")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-07-26 11:42:54 - [TEST_STEP][PASSED] - verifyTextNotPresent(ROLE_NAME, false, STOP_ON_FAILURE): Text 'Custom Role' is not present on page&#xD;
&#xD;
2020-07-26 11:42:57 - [MESSAGE][PASSED] - Text 'Custom Role' is not present on page</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2020-07-26 11:28:41 - [TEST_SUITE][INCOMPLETE] - generic: null</system-out>
        <system-err>2020-07-26 11:28:41 - [TEST_SUITE][INCOMPLETE] - generic: null</system-err>
    </testsuite>
</testsuites>
