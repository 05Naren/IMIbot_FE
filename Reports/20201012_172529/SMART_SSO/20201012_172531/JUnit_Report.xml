<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="SMART_SSO" time="1070" tests="7" failures="0" errors="0">
    <testsuite name="SMART_SSO" tests="7" failures="0" errors="0" time="1070" timestamp="2020-10-12 17:25:51" hostname="narendra.n - WLPT580.imidomain.com" id="Test Suites/SMART_SSO">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="D:\\IMIbot.ai-Project\\Reports\\20201012_172529\\SMART_SSO\\20201012_172531"/>
            <property name="logFiles" value="D:\\IMIbot.ai-Project\\Reports\\20201012_172529\\SMART_SSO\\20201012_172531\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="narendra.n - WLPT580.imidomain.com"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.3.3.11"/>
            <property name="browser" value="Chrome 86.0.4240.75"/>
            <property name="hostAddress" value="192.168.29.195"/>
            <property name="sessionId" value="69b3325a78bfc7c47bd9e8a473765d48"/>
            <property name="seleniumVersion" value="3.141.59"/>
            <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
            <property name="platform" value="Windows 8.1"/>
        </properties>
        <testcase name="Test Cases/Smartbot/botCreation_Test" classname="Test Cases/Smartbot/botCreation_Test" status="PASSED">
            <system-out>2020-10-12 17:27:30 - [TEST_CASE][PASSED] - Test Cases/Smartbot/botCreation_Test: Test Cases/Smartbot/botCreation_Test&#xD;
&#xD;
2020-10-12 17:27:31 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Smart bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:38 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createBot")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:41 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/botName"), nameOfTheBot): Keys 'Hotfix Smart' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-10-12 17:27:47 - [MESSAGE][PASSED] - Keys 'Hotfix Smart' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-10-12 17:27:47 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/smartContinueBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Toggle/feedback")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:52 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:52 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/smartContinueBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:55 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/done")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:27:58 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Button/updateBot"), 30, OPTIONAL): Object 'Object Repository/Button/updateBot' is present&#xD;
&#xD;
2020-10-12 17:28:12 - [MESSAGE][PASSED] - Object 'Object Repository/Button/updateBot' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/nlpConceptCreation_Test" classname="Test Cases/Smartbot/nlpConceptCreation_Test" status="PASSED">
            <system-out>2020-10-12 17:28:13 - [TEST_CASE][PASSED] - Test Cases/Smartbot/nlpConceptCreation_Test: Test Cases/Smartbot/nlpConceptCreation_Test&#xD;
&#xD;
2020-10-12 17:28:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nlp")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:29:02 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:29:02 - [TEST_STEP][PASSED] - testData = findTestData("testData_Smart"): null&#xD;
&#xD;
2020-10-12 17:29:03 - [TEST_STEP][PASSED] - platform.NLP.addCustom_NER(): platform.NLP.addCustom_NER is PASSED&#xD;
&#xD;
2020-10-12 17:29:07 - [MESSAGE][PASSED] - Keys 'custom' sent to object: 'Object Repository/Input/librariesAndModules'&#xD;
&#xD;
2020-10-12 17:29:19 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-10-12 17:29:19 - [MESSAGE][PASSED] - platform.NLP.addCustom_NER is PASSED&#xD;
&#xD;
2020-10-12 17:29:19 - [TEST_STEP][PASSED] - platform.NLP.createConceptType("Double Match", false, testData.getValue("concept_name", 1), testData.getValue("file_name", 1)): platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-10-12 17:29:31 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-10-12 17:30:03 - [MESSAGE][INFO] - ****&#xD;
&#xD;
2020-10-12 17:30:53 - [MESSAGE][PASSED] - Keys 'city' sent to object: 'Object Repository/Input/conceptName'&#xD;
&#xD;
2020-10-12 17:30:57 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/citynames.txt' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:30:59 - [MESSAGE][PASSED] - platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-10-12 17:30:59 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/conceptBackBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:02 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:02 - [TEST_STEP][PASSED] - verifyTextPresent("city", false, STOP_ON_FAILURE): Text 'city' is present on page &#xD;
&#xD;
2020-10-12 17:31:05 - [MESSAGE][PASSED] - Text 'city' is present on page</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/setUpLogicAndBotPreviewTest" classname="Test Cases/Smartbot/setUpLogicAndBotPreviewTest" status="PASSED">
            <system-out>2020-10-12 17:31:06 - [TEST_CASE][PASSED] - Test Cases/Smartbot/setUpLogicAndBotPreviewTest: Test Cases/Smartbot/setUpLogicAndBotPreviewTest&#xD;
&#xD;
2020-10-12 17:31:08 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/logic")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:11 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:11 - [TEST_STEP][PASSED] - PATH = getProjectDir() + "/Collection/": null&#xD;
&#xD;
2020-10-12 17:31:11 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Generation Template"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:14 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:14 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Toggle/code")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:18 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:18 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("NewRepo/editCodeBtn"), 20, STOP_ON_FAILURE): Object 'Object Repository/NewRepo/editCodeBtn' is present&#xD;
&#xD;
2020-10-12 17:31:19 - [MESSAGE][PASSED] - Object 'Object Repository/NewRepo/editCodeBtn' is present&#xD;
&#xD;
2020-10-12 17:31:19 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/editCodeBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:22 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("WEB_OBJECTS/confirm")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:25 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Button/save", ["value":"Save"]), 15, OPTIONAL): Web element with id: 'Object Repository/Button/save' located by 'By.xpath: //*[text()='Save']' not found&#xD;
&#xD;
2020-10-12 17:31:47 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //*[text()='Save']'. Please recheck the objects properties to make sure the desired element is located. &#xD;
&#xD;
2020-10-12 17:31:47 - [MESSAGE][WARNING] - Web element with id: 'Object Repository/Button/save' located by 'By.xpath: //*[text()='Save']' not found&#xD;
&#xD;
2020-10-12 17:31:47 - [TEST_STEP][PASSED] - for ([count = 1, count &lt;= findTestData("testData_Smart").getRowNumbers(), (count++)]): null&#xD;
&#xD;
2020-10-12 17:31:47 - [TEST_STEP][PASSED] - if (count == 1): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:31:47 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/df_template.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:32:12 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_template.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:32:12 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:32:15 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:32:15 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:32:15 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-10-12 17:32:15 - [TEST_STEP][PASSED] - else: platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:32:15 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":findTestData("testData_Smart").getValue(section, count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:32:19 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:32:19 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/df_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:33:02 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:33:02 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:05 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:05 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:33:05 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-10-12 17:33:05 - [TEST_STEP][PASSED] - else: platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:05 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":findTestData("testData_Smart").getValue(section, count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:09 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/generation_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:33:13 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:33:13 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:15 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:15 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:33:15 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-10-12 17:33:15 - [TEST_STEP][PASSED] - else: platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:15 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":findTestData("testData_Smart").getValue(section, count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:18 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:18 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/generation_templates.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:33:22 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_templates.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:33:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:25 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:33:25 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-10-12 17:33:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:27 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:27 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER), STOP_ON_FAILURE): Keys 'ENTER + How is the weather of hyderabad today?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:33:32 - [MESSAGE][PASSED] - Keys 'ENTER + How is the weather of hyderabad today?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:33:32 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-10-12 17:33:33 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-10-12 17:33:33 - [TEST_STEP][PASSED] - platform.Preview.verifyBotResponse(now().toString()): YOUR TEXT HAS A MATCH&#xD;
&#xD;
2020-10-12 17:33:36 - [MESSAGE][PASSED] - Delayed 3 second(s)&#xD;
&#xD;
2020-10-12 17:33:39 - [MESSAGE][PASSED] - YOUR TEXT HAS A MATCH&#xD;
&#xD;
2020-10-12 17:33:39 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/upvote")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:41 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:44 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/maskingConcept_Test" classname="Test Cases/Smartbot/maskingConcept_Test" status="PASSED">
            <system-out>2020-10-12 17:33:44 - [TEST_CASE][PASSED] - Test Cases/Smartbot/maskingConcept_Test: Test Cases/Smartbot/maskingConcept_Test&#xD;
&#xD;
2020-10-12 17:33:45 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nlp")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:33:49 - [TEST_STEP][PASSED] - PATH = getProjectDir() + "/Collection/": null&#xD;
&#xD;
2020-10-12 17:33:49 - [TEST_STEP][PASSED] - testData = findTestData("testData_Smart"): null&#xD;
&#xD;
2020-10-12 17:33:49 - [TEST_STEP][PASSED] - platform.NLP.createConceptType("Regex", true, testData.getValue("concept_name", 2), testData.getValue("file_name", 2)): platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-10-12 17:33:50 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-10-12 17:34:06 - [MESSAGE][PASSED] - Keys 'creditcard_regex' sent to object: 'Object Repository/Input/conceptName'&#xD;
&#xD;
2020-10-12 17:34:09 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/regex.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:34:11 - [MESSAGE][PASSED] - platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-10-12 17:34:11 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/conceptBackBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:14 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:14 - [TEST_STEP][PASSED] - platform.NLP.createConceptType("Single Match", true, testData.getValue("concept_name", 3), testData.getValue("file_name", 3)): platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-10-12 17:34:15 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-10-12 17:34:30 - [MESSAGE][PASSED] - Keys 'single_match' sent to object: 'Object Repository/Input/conceptName'&#xD;
&#xD;
2020-10-12 17:34:33 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/single_match.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:34:36 - [MESSAGE][PASSED] - platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-10-12 17:34:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/logic")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:38 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/fork")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:41 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/forkComment"), "Masked concept V2 created"): Keys 'Masked concept V2 created' sent to object: 'Object Repository/Input/forkComment'&#xD;
&#xD;
2020-10-12 17:34:44 - [MESSAGE][PASSED] - Keys 'Masked concept V2 created' sent to object: 'Object Repository/Input/forkComment'&#xD;
&#xD;
2020-10-12 17:34:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createNewFork")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:46 - [TEST_STEP][PASSED] - for ([count = 1, count &lt;= findTestData("testData_Smart").getRowNumbers(), (count++)]): null&#xD;
&#xD;
2020-10-12 17:34:46 - [TEST_STEP][PASSED] - if (count == 1): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:46 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + testData.getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/df_template_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:34:49 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_template_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:34:49 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:51 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-10-12 17:34:51 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2020-10-12 17:34:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("logic_section", count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:34:54 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/df_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:34:57 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:34:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:00 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:00 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:35:00 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-10-12 17:35:00 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2020-10-12 17:35:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("logic_section", count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:02 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:02 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/generation_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:35:06 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:35:06 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:08 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:08 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:35:08 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-10-12 17:35:08 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2020-10-12 17:35:08 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("logic_section", count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:12 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:12 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/generation_templates_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:35:14 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_templates_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:35:14 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:17 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:17 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-10-12 17:35:17 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-10-12 17:35:17 - [TEST_STEP][PASSED] - if (verifyElementText(findTestObject("Generic/versionStatus"), "Inactive", OPTIONAL)): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/versionStatus' are matched.&#xD;
&#xD;
2020-10-12 17:35:20 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/activate")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:22 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:25 - [TEST_STEP][PASSED] - for ([count = 1, count &lt; testData.getRowNumbers(), (count++)]): null&#xD;
&#xD;
2020-10-12 17:35:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(testData.getValue("userQuery", count), ENTER), STOP_ON_FAILURE): Keys 'ENTER + 4162000000001234' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:35:28 - [MESSAGE][PASSED] - Keys 'ENTER + 4162000000001234' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:35:28 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)&#xD;
&#xD;
2020-10-12 17:35:30 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-10-12 17:35:30 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":count]), testData.getValue("botResponse", count), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:35:33 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:35:33 - [TEST_STEP][PASSED] - if (testData.getValue("userQuery", count + 1) == ""): null&#xD;
&#xD;
2020-10-12 17:35:33 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(testData.getValue("userQuery", count), ENTER), STOP_ON_FAILURE): Keys 'ENTER + one' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:35:35 - [MESSAGE][PASSED] - Keys 'ENTER + one' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:35:35 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)&#xD;
&#xD;
2020-10-12 17:35:37 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-10-12 17:35:37 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":count]), testData.getValue("botResponse", count), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:35:41 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:35:41 - [TEST_STEP][PASSED] - if (testData.getValue("userQuery", count + 1) == ""): null&#xD;
&#xD;
2020-10-12 17:35:41 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(testData.getValue("userQuery", count), ENTER), STOP_ON_FAILURE): Keys 'ENTER + four' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:35:44 - [MESSAGE][PASSED] - Keys 'ENTER + four' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:35:44 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)&#xD;
&#xD;
2020-10-12 17:35:46 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-10-12 17:35:46 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":count]), testData.getValue("botResponse", count), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:35:48 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:35:48 - [TEST_STEP][PASSED] - if (testData.getValue("userQuery", count + 1) == ""): null&#xD;
&#xD;
2020-10-12 17:35:48 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-10-12 17:35:48 - [TEST_STEP][PASSED] - getRoomIdAt = new java.util.ArrayList(): null&#xD;
&#xD;
2020-10-12 17:35:48 - [TEST_STEP][PASSED] - getRoomIdAt = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:35:54 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:35:54 - [TEST_STEP][PASSED] - roomID = get(0).toString(): null&#xD;
&#xD;
2020-10-12 17:35:54 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:57 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:35:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/session")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:00 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:00 - [TEST_STEP][PASSED] - platform.Session.searchByRoomID(roomID): platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:36:05 - [MESSAGE][PASSED] - Text '1985816' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-10-12 17:36:07 - [MESSAGE][PASSED] - platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:36:07 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/webObjectWithText", ["textValue":roomID]), 20, OPTIONAL): Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-10-12 17:36:09 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-10-12 17:36:09 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":roomID])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:11 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:11 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/messageInSession", ["index":1]), "4**************4", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-10-12 17:36:14 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-10-12 17:36:14 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/messageInSession", ["index":3]), "o*e", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-10-12 17:36:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-10-12 17:36:16 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/closePopup")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:18 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/oneClickTestingDisabledCallback_Test" classname="Test Cases/Smartbot/oneClickTestingDisabledCallback_Test" status="PASSED">
            <system-out>2020-10-12 17:36:18 - [TEST_CASE][PASSED] - Test Cases/Smartbot/oneClickTestingDisabledCallback_Test: Test Cases/Smartbot/oneClickTestingDisabledCallback_Test&#xD;
&#xD;
2020-10-12 17:36:19 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/oneClickTest"), 30, OPTIONAL): Object 'Object Repository/Generic/oneClickTest' is present&#xD;
&#xD;
2020-10-12 17:36:20 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/oneClickTest' is present&#xD;
&#xD;
2020-10-12 17:36:20 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/oneClickTest")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:23 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:23 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_OneClickTesting"): null&#xD;
&#xD;
2020-10-12 17:36:24 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Toggle/oneClickCallback"), 20, STOP_ON_FAILURE): Object 'Object Repository/Toggle/oneClickCallback' is present&#xD;
&#xD;
2020-10-12 17:36:26 - [MESSAGE][PASSED] - Object 'Object Repository/Toggle/oneClickCallback' is present&#xD;
&#xD;
2020-10-12 17:36:26 - [TEST_STEP][PASSED] - verifyTextPresent("Message", false, STOP_ON_FAILURE): Text 'Message' is present on page &#xD;
&#xD;
2020-10-12 17:36:29 - [MESSAGE][PASSED] - Text 'Message' is present on page &#xD;
&#xD;
2020-10-12 17:36:29 - [TEST_STEP][PASSED] - verifyTextPresent("Expected template", false, STOP_ON_FAILURE): Text 'Expected template' is present on page &#xD;
&#xD;
2020-10-12 17:36:35 - [MESSAGE][PASSED] - Text 'Expected template' is present on page &#xD;
&#xD;
2020-10-12 17:36:35 - [TEST_STEP][PASSED] - verifyTextPresent("Reset previous context", false, STOP_ON_FAILURE): Text 'Reset previous context' is present on page &#xD;
&#xD;
2020-10-12 17:36:39 - [MESSAGE][PASSED] - Text 'Reset previous context' is present on page &#xD;
&#xD;
2020-10-12 17:36:39 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/importIcon")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:42 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:42 - [TEST_STEP][PASSED] - platform.Method.uploadCsvFile(false, uploadSmartTestCases): platform.Method.uploadCsvFile is PASSED&#xD;
&#xD;
2020-10-12 17:36:42 - [MESSAGE][INFO] - PREVIOUS DATA NOT BE OVERRIDDEN&#xD;
&#xD;
2020-10-12 17:36:45 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/oneClickSmartTestCase.csv' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-10-12 17:36:47 - [MESSAGE][PASSED] - platform.Method.uploadCsvFile is PASSED&#xD;
&#xD;
2020-10-12 17:36:47 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/updateBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:49 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("ICONS/toastMsg"), 30, STOP_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-10-12 17:36:51 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-10-12 17:36:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo2/execution")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:54 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Button/btnExecute"), 20, STOP_ON_FAILURE): Object 'Object Repository/Button/btnExecute' is present&#xD;
&#xD;
2020-10-12 17:36:55 - [MESSAGE][PASSED] - Object 'Object Repository/Button/btnExecute' is present&#xD;
&#xD;
2020-10-12 17:36:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/btnExecute")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:36:58 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/testSummary", ["status":"summery-status-completed"]), 90, STOP_ON_FAILURE): Object 'Object Repository/Generic/testSummary' is visible&#xD;
&#xD;
2020-10-12 17:37:08 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/testSummary' is visible&#xD;
&#xD;
2020-10-12 17:37:08 - [TEST_STEP][PASSED] - verifyTextPresent("Status", false, STOP_ON_FAILURE): Text 'Status' is present on page &#xD;
&#xD;
2020-10-12 17:37:12 - [MESSAGE][PASSED] - Text 'Status' is present on page &#xD;
&#xD;
2020-10-12 17:37:12 - [TEST_STEP][PASSED] - verifyTextPresent("Utterance", false, STOP_ON_FAILURE): Text 'Utterance' is present on page &#xD;
&#xD;
2020-10-12 17:37:15 - [MESSAGE][PASSED] - Text 'Utterance' is present on page &#xD;
&#xD;
2020-10-12 17:37:15 - [TEST_STEP][PASSED] - verifyTextPresent("Expected template", false, STOP_ON_FAILURE): Text 'Expected template' is present on page &#xD;
&#xD;
2020-10-12 17:37:19 - [MESSAGE][PASSED] - Text 'Expected template' is present on page &#xD;
&#xD;
2020-10-12 17:37:19 - [TEST_STEP][PASSED] - verifyTextPresent("Actual template", false, STOP_ON_FAILURE): Text 'Actual template' is present on page &#xD;
&#xD;
2020-10-12 17:37:23 - [MESSAGE][PASSED] - Text 'Actual template' is present on page &#xD;
&#xD;
2020-10-12 17:37:23 - [TEST_STEP][PASSED] - verifyTextPresent("Room ID", false, STOP_ON_FAILURE): Text 'Room ID' is present on page &#xD;
&#xD;
2020-10-12 17:37:27 - [MESSAGE][PASSED] - Text 'Room ID' is present on page &#xD;
&#xD;
2020-10-12 17:37:27 - [TEST_STEP][PASSED] - verifyTextPresent("Actions", false, STOP_ON_FAILURE): Text 'Actions' is present on page &#xD;
&#xD;
2020-10-12 17:37:30 - [MESSAGE][PASSED] - Text 'Actions' is present on page &#xD;
&#xD;
2020-10-12 17:37:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("ICONS/action", ["index":5])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/btnOptionsInOneClickTesting", ["btnValue":"Transaction details"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:35 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:35 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("NewRepo2/sessionWindow"), 20, STOP_ON_FAILURE): Object 'Object Repository/NewRepo2/sessionWindow' is present&#xD;
&#xD;
2020-10-12 17:37:37 - [MESSAGE][PASSED] - Object 'Object Repository/NewRepo2/sessionWindow' is present&#xD;
&#xD;
2020-10-12 17:37:37 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/closePopup")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:39 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:39 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/logic"), 20, OPTIONAL): Object 'Object Repository/Generic/logic' is present&#xD;
&#xD;
2020-10-12 17:37:41 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/logic' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/roomCloseCallback_Test" classname="Test Cases/Smartbot/roomCloseCallback_Test" status="PASSED">
            <system-out>2020-10-12 17:37:41 - [TEST_CASE][PASSED] - Test Cases/Smartbot/roomCloseCallback_Test: Test Cases/Smartbot/roomCloseCallback_Test&#xD;
&#xD;
2020-10-12 17:37:42 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("ICONS/sidebarSettings")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:45 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:37:45 - [TEST_STEP][PASSED] - platform.Method.enableCloseCallback(true): platform.Method.enableCloseCallback is PASSED&#xD;
&#xD;
2020-10-12 17:37:47 - [MESSAGE][PASSED] - Object 'Object Repository/Button/updateBot' is visible&#xD;
&#xD;
2020-10-12 17:37:56 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Input/sessionCloseTime'&#xD;
&#xD;
2020-10-12 17:37:58 - [MESSAGE][PASSED] - platform.Method.enableCloseCallback is PASSED&#xD;
&#xD;
2020-10-12 17:37:58 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:38:01 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:38:01 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER), STOP_ON_FAILURE): Keys 'ENTER + test callback after session close time' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:38:07 - [MESSAGE][PASSED] - Keys 'ENTER + test callback after session close time' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-10-12 17:38:07 - [TEST_STEP][PASSED] - delay(70): Delayed 70 second(s)&#xD;
&#xD;
2020-10-12 17:39:17 - [MESSAGE][PASSED] - Delayed 70 second(s)&#xD;
&#xD;
2020-10-12 17:39:17 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":2]), botResponse, STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:39:19 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-10-12 17:39:19 - [TEST_STEP][PASSED] - getRoomIdAt = new java.util.ArrayList(): null&#xD;
&#xD;
2020-10-12 17:39:19 - [TEST_STEP][PASSED] - getRoomIdAt = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:39:26 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:39:26 - [TEST_STEP][PASSED] - roomID = get(0).toString(): null&#xD;
&#xD;
2020-10-12 17:39:26 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("GenericII/minimize")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:29 - [MESSAGE][PASSED] - Object: 'Object Repository/GenericII/minimize' is clicked on&#xD;
&#xD;
2020-10-12 17:39:29 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:29 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("Generic/session")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:32 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/session' is clicked on&#xD;
&#xD;
2020-10-12 17:39:32 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:32 - [TEST_STEP][PASSED] - platform.Session.searchByRoomID(roomID): platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:39:37 - [MESSAGE][PASSED] - Text '1985821' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-10-12 17:39:39 - [MESSAGE][PASSED] - platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-10-12 17:39:39 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("NewRepo2/errorIcon"), 20, STOP_ON_FAILURE): Object 'Object Repository/NewRepo2/errorIcon' is present&#xD;
&#xD;
2020-10-12 17:39:41 - [MESSAGE][PASSED] - Object 'Object Repository/NewRepo2/errorIcon' is present&#xD;
&#xD;
2020-10-12 17:39:41 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("Generic/webObjectWithText", ["textValue":roomID])): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:43 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/webObjectWithText' is clicked on&#xD;
&#xD;
2020-10-12 17:39:43 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:43 - [TEST_STEP][PASSED] - verifyTextPresent("error_outline", false, OPTIONAL): Text 'error_outline' is present on page &#xD;
&#xD;
2020-10-12 17:39:49 - [MESSAGE][PASSED] - Text 'error_outline' is present on page &#xD;
&#xD;
2020-10-12 17:39:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("NewRepo2/inputSessionSearch"), searchText): Keys 'Workflows file' sent to object: 'Object Repository/NewRepo2/inputSessionSearch'&#xD;
&#xD;
2020-10-12 17:39:53 - [MESSAGE][PASSED] - Keys 'Workflows file' sent to object: 'Object Repository/NewRepo2/inputSessionSearch'&#xD;
&#xD;
2020-10-12 17:39:53 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/textHighlight"), searchText, STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/textHighlight' are matched.&#xD;
&#xD;
2020-10-12 17:39:56 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/textHighlight' are matched.</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.3/autoAddNewBots_Test" classname="Test Cases/Sprint/v4.3/autoAddNewBots_Test" status="PASSED">
            <system-out>2020-10-12 17:39:56 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.3/autoAddNewBots_Test: Test Cases/Sprint/v4.3/autoAddNewBots_Test&#xD;
&#xD;
2020-10-12 17:39:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/closePopup")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:59 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:39:59 - [TEST_STEP][PASSED] - platform.Method.logOut(): platform.Method.logOut is PASSED&#xD;
&#xD;
2020-10-12 17:40:02 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/userInitials' is hovered&#xD;
&#xD;
2020-10-12 17:40:05 - [MESSAGE][PASSED] - platform.Method.logOut is PASSED&#xD;
&#xD;
2020-10-12 17:40:05 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), ["username":"naren.n@yopmail.com", "password":PASSWORD], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-10-12 17:40:05 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-10-12 17:40:06 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'naren.n@yopmail.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-10-12 17:40:12 - [MESSAGE][PASSED] - Keys 'naren.n@yopmail.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-10-12 17:40:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-10-12 17:40:15 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-10-12 17:40:15 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-10-12 17:40:17 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-10-12 17:40:17 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Wait for page load successfully&#xD;
&#xD;
2020-10-12 17:40:49 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //app-button-wrapper//button'. Please recheck the objects properties to make sure the desired element is located. &#xD;
&#xD;
2020-10-12 17:40:49 - [MESSAGE][WARNING] - Object 'Object Repository/Button/createBot' is not present after 30 second(s)&#xD;
&#xD;
2020-10-12 17:40:49 - [TEST_STEP][PASSED] - waitForPageLoad(10): Wait for page load successfully&#xD;
&#xD;
2020-10-12 17:40:50 - [MESSAGE][PASSED] - Wait for page load successfully&#xD;
&#xD;
2020-10-12 17:40:50 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-10-12 17:40:50 - [TEST_STEP][PASSED] - try: Text 'There are no Q&amp;A bots in your account' is present on page &#xD;
&#xD;
2020-10-12 17:40:50 - [TEST_STEP][PASSED] - verifyTextPresent("There are no Q&amp;A bots in your account", false, CONTINUE_ON_FAILURE): Text 'There are no Q&amp;A bots in your account' is present on page &#xD;
&#xD;
2020-10-12 17:40:53 - [MESSAGE][PASSED] - Text 'There are no Q&amp;A bots in your account' is present on page &#xD;
&#xD;
2020-10-12 17:40:53 - [TEST_STEP][PASSED] - platform.Method.logOut(): platform.Method.logOut is PASSED&#xD;
&#xD;
2020-10-12 17:40:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/userInitials' is hovered&#xD;
&#xD;
2020-10-12 17:40:58 - [MESSAGE][PASSED] - platform.Method.logOut is PASSED&#xD;
&#xD;
2020-10-12 17:40:58 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Input/username"), 30, CONTINUE_ON_FAILURE): Object 'Object Repository/Input/username' is visible&#xD;
&#xD;
2020-10-12 17:41:00 - [MESSAGE][PASSED] - Object 'Object Repository/Input/username' is visible&#xD;
&#xD;
2020-10-12 17:41:00 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), ["username":USERNAME, "password":PASSWORD], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-10-12 17:41:00 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-10-12 17:41:00 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-10-12 17:41:03 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-10-12 17:41:03 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-10-12 17:41:06 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-10-12 17:41:06 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-10-12 17:41:08 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-10-12 17:41:08 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-10-12 17:41:25 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-10-12 17:41:25 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-10-12 17:41:25 - [TEST_STEP][PASSED] - platform.Dashboard.newBotAdditionToUser("naren"): platform.Dashboard.newBotAdditionToUser is PASSED&#xD;
&#xD;
2020-10-12 17:41:27 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/userInitials' is hovered&#xD;
&#xD;
2020-10-12 17:41:41 - [MESSAGE][PASSED] - Object 'Object Repository/WEB_OBJECTS/usertable' is visible&#xD;
&#xD;
2020-10-12 17:42:05 - [MESSAGE][PASSED] - platform.Dashboard.newBotAdditionToUser is PASSED&#xD;
&#xD;
2020-10-12 17:42:05 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 30, OPTIONAL): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-10-12 17:42:13 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-10-12 17:42:13 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/imiLogo")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:21 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:21 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Button/createBot"), 30, CONTINUE_ON_FAILURE): Object 'Object Repository/Button/createBot' is visible&#xD;
&#xD;
2020-10-12 17:42:24 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is visible&#xD;
&#xD;
2020-10-12 17:42:25 - [TEST_STEP][PASSED] - callTestCase(findTestCase("FAQ_SSO/botCreation_Test"), ["nameOfTheBot":"new_bot_agent"], STOP_ON_FAILURE): Call Test Case 'Test Cases/FAQ_SSO/botCreation_Test' successfully&#xD;
&#xD;
2020-10-12 17:42:25 - [TEST_CASE][PASSED] - Test Cases/FAQ_SSO/botCreation_Test: Test Cases/FAQ_SSO/botCreation_Test&#xD;
&#xD;
2020-10-12 17:42:26 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createBot")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:30 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/botName"), nameOfTheBot): Keys 'new_bot_agent' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-10-12 17:42:33 - [MESSAGE][PASSED] - Keys 'new_bot_agent' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-10-12 17:42:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Toggle/feedback")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/done")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:39 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:39 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/articleState"), 60, OPTIONAL): Object 'Object Repository/Generic/articleState' is visible&#xD;
&#xD;
2020-10-12 17:42:48 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/articleState' is visible&#xD;
&#xD;
2020-10-12 17:42:48 - [TEST_STEP][PASSED] - if (!(verifyElementText(findTestObject("Generic/articleState"), "Trained", OPTIONAL))): Actual text and expected text of test object 'Object Repository/Generic/articleState' are matched.&#xD;
&#xD;
2020-10-12 17:42:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/articleState' are matched.&#xD;
&#xD;
2020-10-12 17:42:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:53 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-10-12 17:42:53 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/FAQ_SSO/botCreation_Test' successfully&#xD;
&#xD;
2020-10-12 17:42:53 - [TEST_STEP][PASSED] - platform.Method.logOut(): platform.Method.logOut is PASSED&#xD;
&#xD;
2020-10-12 17:42:56 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/userInitials' is hovered&#xD;
&#xD;
2020-10-12 17:42:58 - [MESSAGE][PASSED] - platform.Method.logOut is PASSED&#xD;
&#xD;
2020-10-12 17:42:58 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), ["username":"naren.n@yopmail.com", "password":PASSWORD], CONTINUE_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-10-12 17:42:58 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-10-12 17:42:58 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'naren.n@yopmail.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-10-12 17:43:01 - [MESSAGE][PASSED] - Keys 'naren.n@yopmail.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-10-12 17:43:01 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-10-12 17:43:03 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-10-12 17:43:03 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-10-12 17:43:06 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-10-12 17:43:06 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Wait for page load successfully&#xD;
&#xD;
2020-10-12 17:43:39 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //app-button-wrapper//button'. Please recheck the objects properties to make sure the desired element is located. &#xD;
&#xD;
2020-10-12 17:43:39 - [MESSAGE][WARNING] - Object 'Object Repository/Button/createBot' is not present after 30 second(s)&#xD;
&#xD;
2020-10-12 17:43:39 - [TEST_STEP][PASSED] - waitForPageLoad(10): Wait for page load successfully&#xD;
&#xD;
2020-10-12 17:43:40 - [MESSAGE][PASSED] - Wait for page load successfully&#xD;
&#xD;
2020-10-12 17:43:40 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-10-12 17:43:40 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Generic/webObjectWithText", ["textValue":" new_bot_agent "]), 20, STOP_ON_FAILURE): Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-10-12 17:43:41 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2020-10-12 17:25:51 - [TEST_SUITE][INCOMPLETE] - SMART_SSO: null</system-out>
        <system-err>2020-10-12 17:25:51 - [TEST_SUITE][INCOMPLETE] - SMART_SSO: null</system-err>
    </testsuite>
</testsuites>
