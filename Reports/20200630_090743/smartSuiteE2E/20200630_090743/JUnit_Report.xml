<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="smartSuiteE2E" time="926" tests="6" failures="0" errors="0">
    <testsuite name="smartSuiteE2E" tests="6" failures="0" errors="0" time="926" timestamp="2020-06-30 09:08:03" hostname="narendra.n - WLPT580.imidomain.com" id="Test Suites/smartSuiteE2E">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="D:\\IMIbot.ai-Project\\Reports\\20200630_090743\\smartSuiteE2E\\20200630_090743"/>
            <property name="logFiles" value="D:\\IMIbot.ai-Project\\Reports\\20200630_090743\\smartSuiteE2E\\20200630_090743\\execution0.log"/>
            <property name="attachments" value=""/>
            <property name="hostName" value="narendra.n - WLPT580.imidomain.com"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.3.3.11"/>
            <property name="browser" value="Chrome 83.0.4103.116"/>
            <property name="hostAddress" value="192.168.1.4"/>
            <property name="sessionId" value="d8161d6d29c212b2f3b197427d435814"/>
            <property name="seleniumVersion" value="3.141.59"/>
            <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
            <property name="platform" value="Windows 8.1"/>
        </properties>
        <testcase name="Test Cases/Smartbot/botCreation_Test" classname="Test Cases/Smartbot/botCreation_Test" status="PASSED">
            <system-out>2020-06-30 09:08:05 - [TEST_CASE][PASSED] - Test Cases/Smartbot/botCreation_Test: Test Cases/Smartbot/botCreation_Test&#xD;
&#xD;
2020-06-30 09:08:14 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-30 09:08:14 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:08:17 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-30 09:08:17 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-30 09:08:18 - [MESSAGE][INFO] - Action delay is set to 1 seconds&#xD;
&#xD;
2020-06-30 09:08:37 - [MESSAGE][PASSED] - Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:08:37 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-30 09:08:40 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-30 09:08:41 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:08:41 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-30 09:08:43 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:08:48 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:08:48 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:08:52 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:08:52 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:08:55 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:08:55 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:09:16 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:09:16 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:09:16 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Smart bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:21 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:21 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createBot")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:25 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/botName"), nameOfTheBot): Keys 'Weather Bot 2020' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-06-30 09:09:30 - [MESSAGE][PASSED] - Keys 'Weather Bot 2020' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-06-30 09:09:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/smartContinueBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Toggle/feedback")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/smartContinueBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:38 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/done")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:09:41 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Button/updateBot"), 30, OPTIONAL): Object 'Object Repository/Button/updateBot' is present&#xD;
&#xD;
2020-06-30 09:09:53 - [MESSAGE][PASSED] - Object 'Object Repository/Button/updateBot' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/nlpConceptCreation_Test" classname="Test Cases/Smartbot/nlpConceptCreation_Test" status="PASSED">
            <system-out>2020-06-30 09:09:53 - [TEST_CASE][PASSED] - Test Cases/Smartbot/nlpConceptCreation_Test: Test Cases/Smartbot/nlpConceptCreation_Test&#xD;
&#xD;
2020-06-30 09:10:01 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-30 09:10:01 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:10:01 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-30 09:10:09 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-30 09:10:09 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-30 09:10:23 - [MESSAGE][PASSED] - Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:10:23 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-30 09:10:26 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-30 09:10:27 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:10:27 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-30 09:10:27 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:10:31 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:10:31 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:10:34 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:10:34 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:10:37 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:10:37 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:10:52 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:10:52 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:10:52 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/imiLogo")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:10:55 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:10:55 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Smart bots", SMART_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:10:56 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:10:59 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-30 09:11:01 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:11:01 - [TEST_STEP][PASSED] - testData = findTestData("testData_Smart"): null&#xD;
&#xD;
2020-06-30 09:11:02 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nlp")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:11:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:11:09 - [TEST_STEP][PASSED] - platform.NLP.addCustom_NER(): platform.NLP.addCustom_NER is PASSED&#xD;
&#xD;
2020-06-30 09:11:13 - [MESSAGE][PASSED] - Keys 'custom' sent to object: 'Object Repository/Input/librariesAndModules'&#xD;
&#xD;
2020-06-30 09:11:25 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-06-30 09:11:25 - [MESSAGE][PASSED] - platform.NLP.addCustom_NER is PASSED&#xD;
&#xD;
2020-06-30 09:11:25 - [TEST_STEP][PASSED] - platform.NLP.createConceptType("Double Match", false, testData.getValue("concept_name", 1), testData.getValue("file_name", 1)): platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-06-30 09:11:26 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-30 09:11:32 - [MESSAGE][INFO] - ****&#xD;
&#xD;
2020-06-30 09:11:37 - [MESSAGE][PASSED] - Keys 'city' sent to object: 'Object Repository/Input/conceptName'&#xD;
&#xD;
2020-06-30 09:11:40 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/citynames.txt' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:11:43 - [MESSAGE][PASSED] - platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-06-30 09:11:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/conceptBackBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:11:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:11:46 - [TEST_STEP][PASSED] - verifyTextPresent("city", false, STOP_ON_FAILURE): Text 'city' is present on page &#xD;
&#xD;
2020-06-30 09:11:49 - [MESSAGE][PASSED] - Text 'city' is present on page</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/setUpLogicAndBotPreviewTest" classname="Test Cases/Smartbot/setUpLogicAndBotPreviewTest" status="PASSED">
            <system-out>2020-06-30 09:11:49 - [TEST_CASE][PASSED] - Test Cases/Smartbot/setUpLogicAndBotPreviewTest: Test Cases/Smartbot/setUpLogicAndBotPreviewTest&#xD;
&#xD;
2020-06-30 09:11:50 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-30 09:11:50 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:11:50 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-30 09:11:53 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-30 09:11:53 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-30 09:12:08 - [MESSAGE][PASSED] - Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:12:08 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-30 09:12:10 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-30 09:12:11 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:12:11 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-30 09:12:11 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:12:14 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:12:14 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:12:19 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:12:19 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:12:23 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:12:23 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:12:37 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:12:37 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:12:37 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Smart bots", SMART_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:12:38 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:12:41 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-30 09:12:44 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:12:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/logic")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:12:52 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:12:52 - [TEST_STEP][PASSED] - PATH = getProjectDir() + "/Collection/": null&#xD;
&#xD;
2020-06-30 09:12:52 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Generation Template"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:12:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:12:58 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Toggle/code")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:01 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:01 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/editCodeBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:04 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:04 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Confirm "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:07 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:07 - [TEST_STEP][PASSED] - waitForElementClickable(findTestObject("Button/save", ["value":"Save"]), 15, OPTIONAL): Object 'Object Repository/Button/save' is clickable&#xD;
&#xD;
2020-06-30 09:13:19 - [MESSAGE][PASSED] - Object 'Object Repository/Button/save' is clickable&#xD;
&#xD;
2020-06-30 09:13:19 - [TEST_STEP][PASSED] - for ([count = 1, count &lt;= findTestData("testData_Smart").getRowNumbers(), (count++)]): null&#xD;
&#xD;
2020-06-30 09:13:19 - [TEST_STEP][PASSED] - if (count == 1): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:19 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/df_template.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:22 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_template.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:24 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:24 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:13:24 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-06-30 09:13:24 - [TEST_STEP][PASSED] - else: platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:24 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":findTestData("testData_Smart").getValue(section, count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:27 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:27 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/df_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:30 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:33 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:13:33 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-06-30 09:13:33 - [TEST_STEP][PASSED] - else: platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":findTestData("testData_Smart").getValue(section, count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:36 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/generation_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:40 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_rules.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:43 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:43 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:13:43 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-06-30 09:13:43 - [TEST_STEP][PASSED] - else: platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":findTestData("testData_Smart").getValue(section, count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:45 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:45 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue(fileColumn, count)): File 'D:/IMIbot.ai-Project/Collection/generation_templates.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:48 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_templates.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:13:48 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:51 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:13:51 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-06-30 09:13:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:13:54 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER), STOP_ON_FAILURE): Keys 'ENTER + How is the weather of hyderabad today?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:13:59 - [MESSAGE][PASSED] - Keys 'ENTER + How is the weather of hyderabad today?' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:13:59 - [TEST_STEP][PASSED] - delay(1): Delayed 1 second(s)&#xD;
&#xD;
2020-06-30 09:14:00 - [MESSAGE][PASSED] - Delayed 1 second(s)&#xD;
&#xD;
2020-06-30 09:14:00 - [TEST_STEP][PASSED] - platform.Preview.verifyBotResponse(now().toString()): YOUR TEXT HAS A MATCH&#xD;
&#xD;
2020-06-30 09:14:03 - [MESSAGE][PASSED] - Delayed 3 second(s)&#xD;
&#xD;
2020-06-30 09:14:06 - [MESSAGE][PASSED] - YOUR TEXT HAS A MATCH&#xD;
&#xD;
2020-06-30 09:14:06 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/upvote")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:14:09 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/maskingConcept_Test" classname="Test Cases/Smartbot/maskingConcept_Test" status="PASSED">
            <system-out>2020-06-30 09:14:09 - [TEST_CASE][PASSED] - Test Cases/Smartbot/maskingConcept_Test: Test Cases/Smartbot/maskingConcept_Test&#xD;
&#xD;
2020-06-30 09:14:09 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-30 09:14:09 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:14:09 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-30 09:14:17 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-30 09:14:17 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-30 09:14:34 - [MESSAGE][PASSED] - Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:14:34 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-30 09:14:36 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-30 09:14:37 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:14:37 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-30 09:14:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:14:40 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:14:40 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:14:43 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:14:43 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:14:46 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:14:46 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:15:02 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:15:02 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:15:02 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Smart bots", SMART_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:15:03 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:15:06 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-30 09:15:09 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:15:09 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/nlp")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:15:17 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:15:17 - [TEST_STEP][PASSED] - PATH = getProjectDir() + "/Collection/": null&#xD;
&#xD;
2020-06-30 09:15:17 - [TEST_STEP][PASSED] - testData = findTestData("testData_Smart"): null&#xD;
&#xD;
2020-06-30 09:15:17 - [TEST_STEP][PASSED] - platform.NLP.createConceptType("Regex", true, testData.getValue("concept_name", 2), testData.getValue("file_name", 2)): platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-06-30 09:15:19 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-30 09:15:38 - [MESSAGE][PASSED] - Keys 'creditcard_regex' sent to object: 'Object Repository/Input/conceptName'&#xD;
&#xD;
2020-06-30 09:15:41 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/regex.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:15:43 - [MESSAGE][PASSED] - platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-06-30 09:15:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/conceptBackBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:15:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:15:46 - [TEST_STEP][PASSED] - platform.NLP.createConceptType("Single Match", true, testData.getValue("concept_name", 3), testData.getValue("file_name", 3)): platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-06-30 09:15:47 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-30 09:16:07 - [MESSAGE][PASSED] - Keys 'single_match' sent to object: 'Object Repository/Input/conceptName'&#xD;
&#xD;
2020-06-30 09:16:09 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/single_match.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:11 - [MESSAGE][PASSED] - platform.NLP.createConceptType is PASSED&#xD;
&#xD;
2020-06-30 09:16:11 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/logic")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:14 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:14 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/fork")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:16 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/forkComment"), "Masked concept V2 created"): Keys 'Masked concept V2 created' sent to object: 'Object Repository/Input/forkComment'&#xD;
&#xD;
2020-06-30 09:16:21 - [MESSAGE][PASSED] - Keys 'Masked concept V2 created' sent to object: 'Object Repository/Input/forkComment'&#xD;
&#xD;
2020-06-30 09:16:21 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createNewFork")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:24 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:24 - [TEST_STEP][PASSED] - for ([count = 1, count &lt;= findTestData("testData_Smart").getRowNumbers(), (count++)]): null&#xD;
&#xD;
2020-06-30 09:16:24 - [TEST_STEP][PASSED] - if (count == 1): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:24 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + testData.getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/df_template_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:27 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_template_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:27 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:30 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-06-30 09:16:30 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2020-06-30 09:16:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("logic_section", count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:32 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:32 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/df_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:37 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/df_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:37 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:39 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:39 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:16:40 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-06-30 09:16:40 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2020-06-30 09:16:40 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("logic_section", count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:42 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:42 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/generation_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:45 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_rules_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:45 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:47 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:47 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:16:48 - [TEST_STEP][PASSED] - if (count == 1): null&#xD;
&#xD;
2020-06-30 09:16:48 - [TEST_STEP][PASSED] - else: null&#xD;
&#xD;
2020-06-30 09:16:48 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("logic_section", count)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:50 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:50 - [TEST_STEP][PASSED] - uploadFile(findTestObject("Input/uploadFile"), PATH + findTestData("testData_Smart").getValue("masked_logic_file", count)): File 'D:/IMIbot.ai-Project/Collection/generation_templates_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:53 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/generation_templates_masked.py' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:16:53 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":"Save"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:56 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:56 - [TEST_STEP][PASSED] - if (count == 4): null&#xD;
&#xD;
2020-06-30 09:16:56 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-06-30 09:16:56 - [TEST_STEP][PASSED] - if (verifyElementText(findTestObject("Generic/versionStatus"), "Inactive", OPTIONAL)): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:16:59 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/versionStatus' are matched.&#xD;
&#xD;
2020-06-30 09:16:59 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/activate")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:01 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:01 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:04 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:04 - [TEST_STEP][PASSED] - for ([count = 1, count &lt; testData.getRowNumbers(), (count++)]): null&#xD;
&#xD;
2020-06-30 09:17:04 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(testData.getValue("userQuery", count), ENTER), STOP_ON_FAILURE): Keys 'ENTER + 4162000000001234' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:17:08 - [MESSAGE][PASSED] - Keys 'ENTER + 4162000000001234' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:17:08 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)&#xD;
&#xD;
2020-06-30 09:17:10 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-06-30 09:17:10 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":count]), testData.getValue("botResponse", count), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:17:12 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:17:12 - [TEST_STEP][PASSED] - if (testData.getValue("userQuery", count + 1) == ""): null&#xD;
&#xD;
2020-06-30 09:17:12 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(testData.getValue("userQuery", count), ENTER), STOP_ON_FAILURE): Keys 'ENTER + one' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:17:17 - [MESSAGE][PASSED] - Keys 'ENTER + one' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:17:17 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)&#xD;
&#xD;
2020-06-30 09:17:19 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-06-30 09:17:19 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":count]), testData.getValue("botResponse", count), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:17:21 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:17:21 - [TEST_STEP][PASSED] - if (testData.getValue("userQuery", count + 1) == ""): null&#xD;
&#xD;
2020-06-30 09:17:21 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(testData.getValue("userQuery", count), ENTER), STOP_ON_FAILURE): Keys 'ENTER + four' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:17:24 - [MESSAGE][PASSED] - Keys 'ENTER + four' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:17:24 - [TEST_STEP][PASSED] - delay(2): Delayed 2 second(s)&#xD;
&#xD;
2020-06-30 09:17:26 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-06-30 09:17:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":count]), testData.getValue("botResponse", count), STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:17:29 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:17:29 - [TEST_STEP][PASSED] - if (testData.getValue("userQuery", count + 1) == ""): null&#xD;
&#xD;
2020-06-30 09:17:29 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-06-30 09:17:29 - [TEST_STEP][PASSED] - getRoomIdAt = new java.util.ArrayList(): null&#xD;
&#xD;
2020-06-30 09:17:29 - [TEST_STEP][PASSED] - getRoomIdAt = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:17:35 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:17:35 - [TEST_STEP][PASSED] - roomID = get(0).toString(): null&#xD;
&#xD;
2020-06-30 09:17:35 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/minimize")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:37 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:37 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/session")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:41 - [TEST_STEP][PASSED] - platform.Session.searchByRoomID(roomID): platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:17:46 - [MESSAGE][PASSED] - Text '3813567' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-30 09:17:49 - [MESSAGE][PASSED] - platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:17:49 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/webObjectWithText", ["textValue":roomID]), 20, OPTIONAL): Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-30 09:17:50 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/webObjectWithText' is present&#xD;
&#xD;
2020-06-30 09:17:50 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":roomID])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:53 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:17:53 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/messageInSession", ["index":1]), "4**************4", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-06-30 09:17:57 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-06-30 09:17:57 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/messageInSession", ["index":3]), "o*e", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-06-30 09:18:00 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/messageInSession' are matched.&#xD;
&#xD;
2020-06-30 09:18:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/closePopup")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:18:03 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/oneClickTestingDisabledCallback_Test" classname="Test Cases/Smartbot/oneClickTestingDisabledCallback_Test" status="PASSED">
            <system-out>2020-06-30 09:18:03 - [TEST_CASE][PASSED] - Test Cases/Smartbot/oneClickTestingDisabledCallback_Test: Test Cases/Smartbot/oneClickTestingDisabledCallback_Test&#xD;
&#xD;
2020-06-30 09:18:03 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-30 09:18:03 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:18:03 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-30 09:18:18 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-30 09:18:18 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-30 09:18:34 - [MESSAGE][PASSED] - Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:18:34 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-30 09:18:36 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-30 09:18:37 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:18:37 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-30 09:18:37 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:18:40 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:18:40 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:18:44 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:18:44 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:18:47 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:18:47 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:18:59 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:18:59 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:18:59 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Smart bots", SMART_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:19:01 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:19:04 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-30 09:19:06 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:19:06 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/oneClickTest"), 30, OPTIONAL): Object 'Object Repository/Generic/oneClickTest' is present&#xD;
&#xD;
2020-06-30 09:19:11 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/oneClickTest' is present&#xD;
&#xD;
2020-06-30 09:19:11 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/oneClickTest")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:14 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:14 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_OneClickTesting"): null&#xD;
&#xD;
2020-06-30 09:19:14 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Toggle/oneClickCallback"), 20, STOP_ON_FAILURE): Object 'Object Repository/Toggle/oneClickCallback' is present&#xD;
&#xD;
2020-06-30 09:19:15 - [MESSAGE][PASSED] - Object 'Object Repository/Toggle/oneClickCallback' is present&#xD;
&#xD;
2020-06-30 09:19:15 - [TEST_STEP][PASSED] - verifyTextPresent("Message", false, STOP_ON_FAILURE): Text 'Message' is present on page &#xD;
&#xD;
2020-06-30 09:19:20 - [MESSAGE][PASSED] - Text 'Message' is present on page &#xD;
&#xD;
2020-06-30 09:19:20 - [TEST_STEP][PASSED] - verifyTextPresent("Expected template", false, STOP_ON_FAILURE): Text 'Expected template' is present on page &#xD;
&#xD;
2020-06-30 09:19:24 - [MESSAGE][PASSED] - Text 'Expected template' is present on page &#xD;
&#xD;
2020-06-30 09:19:24 - [TEST_STEP][PASSED] - verifyTextPresent("Reset previous context", false, STOP_ON_FAILURE): Text 'Reset previous context' is present on page &#xD;
&#xD;
2020-06-30 09:19:27 - [MESSAGE][PASSED] - Text 'Reset previous context' is present on page &#xD;
&#xD;
2020-06-30 09:19:27 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/importIcon")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:30 - [TEST_STEP][PASSED] - platform.Method.uploadCsvFile(false, uploadSmartTestCases): platform.Method.uploadCsvFile is PASSED&#xD;
&#xD;
2020-06-30 09:19:30 - [MESSAGE][INFO] - PREVIOUS DATA NOT BE OVERRIDDEN&#xD;
&#xD;
2020-06-30 09:19:33 - [MESSAGE][PASSED] - File 'D:/IMIbot.ai-Project/Collection/oneClickSmartTestCase.csv' sent to object: 'Object Repository/Input/uploadFile'&#xD;
&#xD;
2020-06-30 09:19:36 - [MESSAGE][PASSED] - platform.Method.uploadCsvFile is PASSED&#xD;
&#xD;
2020-06-30 09:19:36 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/updateBtn")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:39 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:39 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("ICONS/toastMsg"), 30, STOP_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-06-30 09:19:42 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-06-30 09:19:42 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo2/execution")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:45 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:45 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Button/btnExecute"), 20, STOP_ON_FAILURE): Object 'Object Repository/Button/btnExecute' is present&#xD;
&#xD;
2020-06-30 09:19:46 - [MESSAGE][PASSED] - Object 'Object Repository/Button/btnExecute' is present&#xD;
&#xD;
2020-06-30 09:19:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/btnExecute")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:48 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:19:48 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/testSummary", ["status":"summery-status-completed"]), 90, STOP_ON_FAILURE): Object 'Object Repository/Generic/testSummary' is visible&#xD;
&#xD;
2020-06-30 09:19:55 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/testSummary' is visible&#xD;
&#xD;
2020-06-30 09:19:55 - [TEST_STEP][PASSED] - verifyTextPresent("Status", false, STOP_ON_FAILURE): Text 'Status' is present on page &#xD;
&#xD;
2020-06-30 09:19:58 - [MESSAGE][PASSED] - Text 'Status' is present on page &#xD;
&#xD;
2020-06-30 09:19:58 - [TEST_STEP][PASSED] - verifyTextPresent("Utterance", false, STOP_ON_FAILURE): Text 'Utterance' is present on page &#xD;
&#xD;
2020-06-30 09:20:01 - [MESSAGE][PASSED] - Text 'Utterance' is present on page &#xD;
&#xD;
2020-06-30 09:20:01 - [TEST_STEP][PASSED] - verifyTextPresent("Expected template", false, STOP_ON_FAILURE): Text 'Expected template' is present on page &#xD;
&#xD;
2020-06-30 09:20:04 - [MESSAGE][PASSED] - Text 'Expected template' is present on page &#xD;
&#xD;
2020-06-30 09:20:04 - [TEST_STEP][PASSED] - verifyTextPresent("Actual template", false, STOP_ON_FAILURE): Text 'Actual template' is present on page &#xD;
&#xD;
2020-06-30 09:20:08 - [MESSAGE][PASSED] - Text 'Actual template' is present on page &#xD;
&#xD;
2020-06-30 09:20:08 - [TEST_STEP][PASSED] - verifyTextPresent("Room ID", false, STOP_ON_FAILURE): Text 'Room ID' is present on page &#xD;
&#xD;
2020-06-30 09:20:11 - [MESSAGE][PASSED] - Text 'Room ID' is present on page &#xD;
&#xD;
2020-06-30 09:20:11 - [TEST_STEP][PASSED] - verifyTextPresent("Actions", false, STOP_ON_FAILURE): Text 'Actions' is present on page &#xD;
&#xD;
2020-06-30 09:20:14 - [MESSAGE][PASSED] - Text 'Actions' is present on page &#xD;
&#xD;
2020-06-30 09:20:14 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("ICONS/action", ["index":5])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:20:16 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:20:16 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/btnOptionsInOneClickTesting", ["btnValue":"Transaction details"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:20:19 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:20:19 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("NewRepo2/sessionWindow"), 20, STOP_ON_FAILURE): Object 'Object Repository/NewRepo2/sessionWindow' is present&#xD;
&#xD;
2020-06-30 09:20:23 - [MESSAGE][PASSED] - Object 'Object Repository/NewRepo2/sessionWindow' is present&#xD;
&#xD;
2020-06-30 09:20:23 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("GenericII/closePopup")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:20:26 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:20:26 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("Generic/logic"), 20, OPTIONAL): Object 'Object Repository/Generic/logic' is present&#xD;
&#xD;
2020-06-30 09:20:27 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/logic' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Smartbot/roomCloseCallback_Test" classname="Test Cases/Smartbot/roomCloseCallback_Test" status="PASSED">
            <system-out>2020-06-30 09:20:27 - [TEST_CASE][PASSED] - Test Cases/Smartbot/roomCloseCallback_Test: Test Cases/Smartbot/roomCloseCallback_Test&#xD;
&#xD;
2020-06-30 09:20:27 - [TEST_STEP][PASSED] - Start listener action : setUp: Current window maximized&#xD;
&#xD;
2020-06-30 09:20:27 - [TEST_STEP][PASSED] - openBrowser(URL): Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:20:27 - [MESSAGE][WARNING] - A browser is already opened. Closing browser and opening a new one&#xD;
&#xD;
2020-06-30 09:20:30 - [MESSAGE][INFO] - Starting 'Chrome' driver&#xD;
&#xD;
2020-06-30 09:20:30 - [MESSAGE][INFO] - User set preference: ['args', '[--start-maximized]']&#xD;
&#xD;
2020-06-30 09:20:42 - [MESSAGE][PASSED] - Browser is opened with url: 'imibot.ai'&#xD;
&#xD;
2020-06-30 09:20:43 - [TEST_STEP][PASSED] - maximizeWindow(): Current window maximized&#xD;
&#xD;
2020-06-30 09:20:45 - [MESSAGE][PASSED] - Current window maximized&#xD;
&#xD;
2020-06-30 09:20:45 - [TEST_STEP][PASSED] - callTestCase(findTestCase("Generic/successfulLogin_Test"), [:], STOP_ON_FAILURE): Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:20:45 - [TEST_CASE][PASSED] - Test Cases/Generic/successfulLogin_Test: Test Cases/Generic/successfulLogin_Test&#xD;
&#xD;
2020-06-30 09:20:45 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/username"), username): Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:20:49 - [MESSAGE][PASSED] - Keys 'narendra.n@imimobile.com' sent to object: 'Object Repository/Input/username'&#xD;
&#xD;
2020-06-30 09:20:49 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/password"), password): Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:20:52 - [MESSAGE][PASSED] - Keys 'Test@2020' sent to object: 'Object Repository/Input/password'&#xD;
&#xD;
2020-06-30 09:20:52 - [TEST_STEP][PASSED] - click(findTestObject("Button/signIn")): Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:20:54 - [MESSAGE][PASSED] - Object: 'Object Repository/Button/signIn' is clicked on&#xD;
&#xD;
2020-06-30 09:20:54 - [TEST_STEP][PASSED] - if (!(waitForElementPresent(findTestObject("Button/createBot"), 30, OPTIONAL))): Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:21:10 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:21:10 - [MESSAGE][PASSED] - Call Test Case 'Test Cases/Generic/successfulLogin_Test' successfully&#xD;
&#xD;
2020-06-30 09:21:10 - [TEST_STEP][PASSED] - platform.Method.navigateToBot("Smart bots", SMART_BOT): platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:21:11 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createBot' is present&#xD;
&#xD;
2020-06-30 09:21:16 - [MESSAGE][INFO] - Performing click action on bot&#xD;
&#xD;
2020-06-30 09:21:19 - [MESSAGE][PASSED] - platform.Method.navigateToBot is PASSED&#xD;
&#xD;
2020-06-30 09:21:19 - [TEST_STEP][PASSED] - platform.Method.enableCloseCallback(true): platform.Method.enableCloseCallback is PASSED&#xD;
&#xD;
2020-06-30 09:21:30 - [MESSAGE][PASSED] - Text '1' is set on object 'Object Repository/Input/sessionCloseTime'&#xD;
&#xD;
2020-06-30 09:21:33 - [MESSAGE][PASSED] - platform.Method.enableCloseCallback is PASSED&#xD;
&#xD;
2020-06-30 09:21:33 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:21:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-06-30 09:21:36 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER), STOP_ON_FAILURE): Keys 'ENTER + test callback after session close time' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:21:39 - [MESSAGE][PASSED] - Keys 'ENTER + test callback after session close time' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-06-30 09:21:39 - [TEST_STEP][PASSED] - delay(70): Delayed 70 second(s)&#xD;
&#xD;
2020-06-30 09:22:49 - [MESSAGE][PASSED] - Delayed 70 second(s)&#xD;
&#xD;
2020-06-30 09:22:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("GenericII/getBotResponse", ["index":2]), botResponse, STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:22:52 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/GenericII/getBotResponse' are matched.&#xD;
&#xD;
2020-06-30 09:22:52 - [TEST_STEP][PASSED] - getRoomIdAt = new java.util.ArrayList(): null&#xD;
&#xD;
2020-06-30 09:22:52 - [TEST_STEP][PASSED] - getRoomIdAt = platform.Utility.getRoomID(): platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:22:57 - [MESSAGE][PASSED] - platform.Utility.getRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:22:57 - [TEST_STEP][PASSED] - roomID = get(0).toString(): null&#xD;
&#xD;
2020-06-30 09:22:57 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("GenericII/minimize")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-30 09:23:00 - [MESSAGE][PASSED] - Object: 'Object Repository/GenericII/minimize' is clicked on&#xD;
&#xD;
2020-06-30 09:23:00 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-30 09:23:00 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("Generic/session")): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-30 09:23:03 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/session' is clicked on&#xD;
&#xD;
2020-06-30 09:23:03 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-30 09:23:03 - [TEST_STEP][PASSED] - platform.Session.searchByRoomID(roomID): platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:23:09 - [MESSAGE][PASSED] - Text '3813597' is set on object 'Object Repository/Input/roomID'&#xD;
&#xD;
2020-06-30 09:23:12 - [MESSAGE][PASSED] - platform.Session.searchByRoomID is PASSED&#xD;
&#xD;
2020-06-30 09:23:12 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("NewRepo2/errorIcon"), 20, STOP_ON_FAILURE): Object 'Object Repository/NewRepo2/errorIcon' is present&#xD;
&#xD;
2020-06-30 09:23:13 - [MESSAGE][PASSED] - Object 'Object Repository/NewRepo2/errorIcon' is present&#xD;
&#xD;
2020-06-30 09:23:13 - [TEST_STEP][PASSED] - platform.Method.toClickOnWebElement(findTestObject("Generic/webObjectWithText", ["textValue":roomID])): platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-30 09:23:16 - [MESSAGE][PASSED] - Object: 'Object Repository/Generic/webObjectWithText' is clicked on&#xD;
&#xD;
2020-06-30 09:23:16 - [MESSAGE][PASSED] - platform.Method.toClickOnWebElement is PASSED&#xD;
&#xD;
2020-06-30 09:23:16 - [TEST_STEP][PASSED] - verifyTextPresent("error_outline", false, OPTIONAL): Text 'error_outline' is present on page &#xD;
&#xD;
2020-06-30 09:23:21 - [MESSAGE][PASSED] - Text 'error_outline' is present on page &#xD;
&#xD;
2020-06-30 09:23:21 - [TEST_STEP][PASSED] - sendKeys(findTestObject("NewRepo2/inputSessionSearch"), searchText): Keys 'Workflows file' sent to object: 'Object Repository/NewRepo2/inputSessionSearch'&#xD;
&#xD;
2020-06-30 09:23:27 - [MESSAGE][PASSED] - Keys 'Workflows file' sent to object: 'Object Repository/NewRepo2/inputSessionSearch'&#xD;
&#xD;
2020-06-30 09:23:27 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("NewRepo2/textHighlight"), searchText, STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/NewRepo2/textHighlight' are matched.&#xD;
&#xD;
2020-06-30 09:23:30 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/NewRepo2/textHighlight' are matched.</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2020-06-30 09:08:03 - [TEST_SUITE][INCOMPLETE] - smartSuiteE2E: null</system-out>
        <system-err>2020-06-30 09:08:03 - [TEST_SUITE][INCOMPLETE] - smartSuiteE2E: null</system-err>
    </testsuite>
</testsuites>
