<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<testsuites name="v4.4_TaskSuite" time="552" tests="8" failures="0" errors="0">
    <testsuite name="v4.4_TaskSuite" tests="8" failures="0" errors="0" time="552" timestamp="2020-11-03 19:31:33" hostname="narendra.n - WLPT580.imidomain.com" id="Test Suites/v4.4_TaskSuite">
        <properties>
            <property name="deviceName" value=""/>
            <property name="devicePlatform" value=""/>
            <property name="logFolder" value="D:\\IMIbot.ai-Project\\Reports\\20201103_193119\\v4.4_TaskSuite\\20201103_193122"/>
            <property name="logFiles" value="D:\\IMIbot.ai-Project\\Reports\\20201103_193119\\v4.4_TaskSuite\\20201103_193122\\execution0.log"/>
            <property name="attachments" value="D:\\IMIbot.ai-Project\\Reports\\20201103_193119\\v4.4_TaskSuite\\20201103_193122\\1604412307268.png, D:\\IMIbot.ai-Project\\Reports\\20201103_193119\\v4.4_TaskSuite\\20201103_193122\\D:/IMIbot.ai-Project/Screenshot/freeform_loc.jpg"/>
            <property name="hostName" value="narendra.n - WLPT580.imidomain.com"/>
            <property name="os" value="Windows 8.1 64bit"/>
            <property name="katalonVersion" value="6.3.3.11"/>
            <property name="browser" value="Chrome 86.0.4240.111"/>
            <property name="hostAddress" value="172.16.40.143"/>
            <property name="sessionId" value="efa46c5ed9875494ab03a6c0a5c4e4c7"/>
            <property name="seleniumVersion" value="3.141.59"/>
            <property name="proxyInformation" value="ProxyInformation{proxyOption=NO_PROXY, proxyServerType=HTTP, password=, proxyServerAddress=, proxyServerPort=0}"/>
            <property name="platform" value="Windows 8.1"/>
        </properties>
        <testcase name="Test Cases/TASK_SSO/botCreation_Test" classname="Test Cases/TASK_SSO/botCreation_Test" status="PASSED">
            <system-out>2020-11-03 19:32:43 - [TEST_CASE][PASSED] - Test Cases/TASK_SSO/botCreation_Test: Test Cases/TASK_SSO/botCreation_Test&#xD;
&#xD;
2020-11-03 19:32:43 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Task bots"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:48 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:48 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createBot")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:51 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/botName"), nameOfTheBot): Keys 'v4.4 Task-Testbot' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-11-03 19:32:54 - [MESSAGE][PASSED] - Keys 'v4.4 Task-Testbot' sent to object: 'Object Repository/Input/botName'&#xD;
&#xD;
2020-11-03 19:32:54 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Toggle/feedback")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:57 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/done")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:59 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:32:59 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/modelState"), 60, OPTIONAL): Object 'Object Repository/Generic/modelState' is visible&#xD;
&#xD;
2020-11-03 19:33:18 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/modelState' is visible&#xD;
&#xD;
2020-11-03 19:33:18 - [TEST_STEP][PASSED] - if (!(verifyElementText(findTestObject("Generic/modelState"), "Trained", OPTIONAL))): Actual text and expected text of test object 'Object Repository/Generic/modelState' are matched.&#xD;
&#xD;
2020-11-03 19:33:20 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/modelState' are matched.</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/mapLocationEntityCreation_Test" classname="Test Cases/Sprint/v4.4/mapLocationEntityCreation_Test" status="PASSED">
            <system-out>2020-11-03 19:33:20 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/mapLocationEntityCreation_Test: Test Cases/Sprint/v4.4/mapLocationEntityCreation_Test&#xD;
&#xD;
2020-11-03 19:33:21 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/training")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:23 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:23 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_Task"): null&#xD;
&#xD;
2020-11-03 19:33:27 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Entities"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:30 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 1 STARTED ***"):  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:33:30 - [MESSAGE][INFO] -  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:33:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createEntity")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:33 - [TEST_STEP][PASSED] - platform.Training.createEntity(testData.getValue("map_entity", 1), " Map location (whatsapp) ", null): platform.Training.createEntity is PASSED&#xD;
&#xD;
2020-11-03 19:33:37 - [MESSAGE][PASSED] - Keys 'map' sent to object: 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:33:40 - [MESSAGE][INFO] - Entity Type:  Map location (whatsapp) &#xD;
&#xD;
2020-11-03 19:33:44 - [MESSAGE][PASSED] - platform.Training.createEntity is PASSED&#xD;
&#xD;
2020-11-03 19:33:44 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:33:46 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:33:46 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; ENTITY CREATION CHECK ***"):  *** VALIDATION --&gt; ENTITY CREATION CHECK ***&#xD;
&#xD;
2020-11-03 19:33:46 - [MESSAGE][INFO] -  *** VALIDATION --&gt; ENTITY CREATION CHECK ***&#xD;
&#xD;
2020-11-03 19:33:46 - [TEST_STEP][PASSED] - mapElement = findWebElements(findTestObject("GenericII/listOfEntityNames"), 5).get(0): null&#xD;
&#xD;
2020-11-03 19:33:48 - [TEST_STEP][PASSED] - assert getText().contentEquals("map") == true: null&#xD;
&#xD;
2020-11-03 19:33:49 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 2 STARTED ***"):  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:33:49 - [MESSAGE][INFO] -  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:33:49 - [TEST_STEP][PASSED] - mapElement.click(): null&#xD;
&#xD;
2020-11-03 19:33:50 - [TEST_STEP][PASSED] - setText(findTestObject("Input/entityName"), testData.getValue("map_entity", 2)): Text 'new map' is set on object 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:33:54 - [MESSAGE][PASSED] - Text 'new map' is set on object 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:33:54 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/entityPageSaveButton")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:57 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:33:57 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:33:58 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:33:58 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; ENTITY NAME UPDATE CHECK ***"):  *** VALIDATION --&gt; ENTITY NAME UPDATE CHECK ***&#xD;
&#xD;
2020-11-03 19:33:58 - [MESSAGE][INFO] -  *** VALIDATION --&gt; ENTITY NAME UPDATE CHECK ***&#xD;
&#xD;
2020-11-03 19:33:58 - [TEST_STEP][PASSED] - mapElement = findWebElements(findTestObject("GenericII/listOfEntityNames"), 5).get(0): null&#xD;
&#xD;
2020-11-03 19:33:59 - [TEST_STEP][PASSED] - assert getText().contentEquals("new map") == true: null&#xD;
&#xD;
2020-11-03 19:34:00 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/response")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:34:03 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:34:03 - [TEST_STEP][PASSED] - platform.Response.createRichResponse(testData.getValue("rich_template", 6), testData.getValue("rich_template_value", 6)): platform.Response.createRichResponse is PASSED&#xD;
&#xD;
2020-11-03 19:34:11 - [MESSAGE][PASSED] - Text 'map_response' is set on object 'Object Repository/NewRepo2/templateKeyName'&#xD;
&#xD;
2020-11-03 19:34:15 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-11-03 19:34:20 - [MESSAGE][PASSED] - Text 'Your map response is stored in here' is set on object 'Object Repository/Input/textResponse'&#xD;
&#xD;
2020-11-03 19:34:23 - [MESSAGE][PASSED] - platform.Response.createRichResponse is PASSED&#xD;
&#xD;
2020-11-03 19:34:23 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:34:24 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/mapLocationEntityTaggingInIntent_Test" classname="Test Cases/Sprint/v4.4/mapLocationEntityTaggingInIntent_Test" status="PASSED">
            <system-out>2020-11-03 19:34:24 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/mapLocationEntityTaggingInIntent_Test: Test Cases/Sprint/v4.4/mapLocationEntityTaggingInIntent_Test&#xD;
&#xD;
2020-11-03 19:34:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/training")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:34:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:34:28 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_Task"): null&#xD;
&#xD;
2020-11-03 19:34:29 - [TEST_STEP][PASSED] - platform.Training.addSingleUtterance(testData.getValue("map_utterance", 1)): platform.Training.addSingleUtterance is PASSED&#xD;
&#xD;
2020-11-03 19:34:35 - [MESSAGE][PASSED] - Keys 'map location test' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-11-03 19:34:38 - [MESSAGE][PASSED] - platform.Training.addSingleUtterance is PASSED&#xD;
&#xD;
2020-11-03 19:34:38 - [TEST_STEP][PASSED] - element = findWebElement(findTestObject("Slots/listOfUtterance"), 5): null&#xD;
&#xD;
2020-11-03 19:34:41 - [TEST_STEP][PASSED] - element.click(): null&#xD;
&#xD;
2020-11-03 19:34:42 - [TEST_STEP][PASSED] - element.sendKeys(Keys.chord(CONTROL, "a")): null&#xD;
&#xD;
2020-11-03 19:34:44 - [TEST_STEP][PASSED] - element.click(): null&#xD;
&#xD;
2020-11-03 19:34:45 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Generic/entitySelection"), 20, OPTIONAL) == false): Text 'No entities found' is present on page &#xD;
&#xD;
2020-11-03 19:35:07 - [MESSAGE][INFO] - Unable to find the element located by 'By.xpath: //mat-select[@formcontrolname='entity_id']'. Please recheck the objects properties to make sure the desired element is located. &#xD;
&#xD;
2020-11-03 19:35:09 - [MESSAGE][WARNING] - com.kms.katalon.core.webui.exception.WebElementNotFoundException: Web element with id: 'Object Repository/Generic/entitySelection' located by 'By.xpath: //mat-select[@formcontrolname='entity_id']' not found (Root cause: com.kms.katalon.core.exception.StepFailedException: com.kms.katalon.core.webui.exception.WebElementNotFoundException: Web element with id: 'Object Repository/Generic/entitySelection' located by 'By.xpath: //mat-select[@formcontrolname='entity_id']' not found&#xD;
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.stepFailed(WebUIKeywordMain.groovy:64)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.doCall(VerifyElementPresentKeyword.groovy:85)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword$_verifyElementPresent_closure1.call(VerifyElementPresentKeyword.groovy)&#xD;
	at com.kms.katalon.core.webui.keyword.internal.WebUIKeywordMain.runKeyword(WebUIKeywordMain.groovy:20)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.verifyElementPresent(VerifyElementPresentKeyword.groovy:92)&#xD;
	at com.kms.katalon.core.webui.keyword.builtin.VerifyElementPresentKeyword.execute(VerifyElementPresentKeyword.groovy:68)&#xD;
	at com.kms.katalon.core.keyword.internal.KeywordExecutor.executeKeywordForPlatform(KeywordExecutor.groovy:56)&#xD;
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords.verifyElementPresent(WebUiBuiltInKeywords.groovy:1418)&#xD;
	at com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords$verifyElementPresent$7.call(Unknown Source)&#xD;
	at mapLocationEntityTaggingInIntent_Test.run(mapLocationEntityTaggingInIntent_Test:28)&#xD;
	at com.kms.katalon.core.main.ScriptEngine.run(ScriptEngine.java:194)&#xD;
	at com.kms.katalon.core.main.ScriptEngine.runScriptAsRawText(ScriptEngine.java:119)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.runScript(TestCaseExecutor.java:337)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.doExecute(TestCaseExecutor.java:328)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.processExecutionPhase(TestCaseExecutor.java:307)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.accessMainPhase(TestCaseExecutor.java:299)&#xD;
	at com.kms.katalon.core.main.TestCaseExecutor.execute(TestCaseExecutor.java:233)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestCaseMainPhase(TestSuiteExecutor.java:169)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.accessTestSuiteMainPhase(TestSuiteExecutor.java:142)&#xD;
	at com.kms.katalon.core.main.TestSuiteExecutor.execute(TestSuiteExecutor.java:91)&#xD;
	at com.kms.katalon.core.main.TestCaseMain.startTestSuite(TestCaseMain.java:157)&#xD;
	at com.kms.katalon.core.main.TestCaseMain$startTestSuite$0.call(Unknown Source)&#xD;
	at TempTestSuite1604412082552.run(TempTestSuite1604412082552.groovy:35)&#xD;
)&#xD;
[[ATTACHMENT|D:\\IMIbot.ai-Project\\Reports\\20201103_193119\\v4.4_TaskSuite\\20201103_193122\\1604412307268.png]]&#xD;
&#xD;
2020-11-03 19:35:09 - [TEST_STEP][PASSED] - verifyTextPresent("No entities found", false, CONTINUE_ON_FAILURE): Text 'No entities found' is present on page &#xD;
&#xD;
2020-11-03 19:35:12 - [MESSAGE][PASSED] - Text 'No entities found' is present on page &#xD;
&#xD;
2020-11-03 19:35:12 - [TEST_STEP][PASSED] - platform.Training.createNewEntityManually(testData.getValue("map_entity", 3), " Map location (whatsapp) ", null): platform.Training.createNewEntityManually is PASSED&#xD;
&#xD;
2020-11-03 19:35:17 - [MESSAGE][PASSED] - Keys 'demo map test' sent to object: 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:35:20 - [MESSAGE][INFO] - Entity Type:  Map location (whatsapp) &#xD;
&#xD;
2020-11-03 19:35:24 - [MESSAGE][PASSED] - platform.Training.createNewEntityManually is PASSED&#xD;
&#xD;
2020-11-03 19:35:24 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 30, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:35:26 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:35:26 - [TEST_STEP][PASSED] - verifyElementNotPresent(findTestObject("Slots/entityValue", ["rowValue":1]), 30, STOP_ON_FAILURE): Web element with id: 'Object Repository/Slots/entityValue' located by 'By.xpath: //tbody[2]/tr[1]/td[2]' is not present after '30' second(s)&#xD;
&#xD;
2020-11-03 19:35:27 - [MESSAGE][PASSED] - Web element with id: 'Object Repository/Slots/entityValue' located by 'By.xpath: //tbody[2]/tr[1]/td[2]' is not present after '30' second(s)&#xD;
&#xD;
2020-11-03 19:35:27 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), testData.getValue("intent_name", 7)): Keys 'map_intent' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-11-03 19:35:30 - [MESSAGE][PASSED] - Keys 'map_intent' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-11-03 19:35:30 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), findTestData("Data Files/testData_Task").getValue("rich_template", 6)): Keys 'map_response' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-11-03 19:35:33 - [MESSAGE][PASSED] - Keys 'map_response' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-11-03 19:35:33 - [TEST_STEP][PASSED] - executeJavaScript("document.getElementsByClassName('bg-red')[0].classList.remove('bg-red');", null): Execute JavaScript 'document.getElementsByClassName('bg-red')[0].classList.remove('bg-red');' successfully&#xD;
&#xD;
2020-11-03 19:35:34 - [MESSAGE][PASSED] - Execute JavaScript 'document.getElementsByClassName('bg-red')[0].classList.remove('bg-red');' successfully&#xD;
&#xD;
2020-11-03 19:35:34 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:36 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:36 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/header"), "map_intent", STOP_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/header' are matched.&#xD;
&#xD;
2020-11-03 19:35:38 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/header' are matched.&#xD;
&#xD;
2020-11-03 19:35:38 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:41 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:41 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("intent_name", 7)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:44 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:44 - [TEST_STEP][PASSED] - verifyElementNotPresent(findTestObject("Slots/markedUpEntity"), 20, STOP_ON_FAILURE): Web element with id: 'Object Repository/Slots/markedUpEntity' located by 'By.xpath: //span[@class='bg-red']' is not present after '20' second(s)&#xD;
&#xD;
2020-11-03 19:35:45 - [MESSAGE][PASSED] - Web element with id: 'Object Repository/Slots/markedUpEntity' located by 'By.xpath: //span[@class='bg-red']' is not present after '20' second(s)&#xD;
&#xD;
2020-11-03 19:35:45 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:47 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:47 - [TEST_STEP][PASSED] - verifyTextPresent("Training data", false, CONTINUE_ON_FAILURE): Text 'Training data' is present on page &#xD;
&#xD;
2020-11-03 19:35:51 - [MESSAGE][PASSED] - Text 'Training data' is present on page</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/mapLocationLinkToSlots_Test" classname="Test Cases/Sprint/v4.4/mapLocationLinkToSlots_Test" status="PASSED">
            <system-out>2020-11-03 19:35:51 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/mapLocationLinkToSlots_Test: Test Cases/Sprint/v4.4/mapLocationLinkToSlots_Test&#xD;
&#xD;
2020-11-03 19:35:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"map_intent"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:54 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 1 STARTED ***"):  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:35:54 - [MESSAGE][INFO] -  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:35:54 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Slots/linkEntity"), 10, CONTINUE_ON_FAILURE): Object 'Object Repository/Slots/linkEntity' is present&#xD;
&#xD;
2020-11-03 19:35:55 - [MESSAGE][PASSED] - Object 'Object Repository/Slots/linkEntity' is present&#xD;
&#xD;
2020-11-03 19:35:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Slots/linkEntity")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:35:58 - [TEST_STEP][PASSED] - listOfEntities = findWebElements(findTestObject("WEB_OBJECTS/entityList"), 20): null&#xD;
&#xD;
2020-11-03 19:35:59 - [TEST_STEP][PASSED] - flag = false: null&#xD;
&#xD;
2020-11-03 19:35:59 - [TEST_STEP][PASSED] - listOfElement = listOfEntities.iterator(): null&#xD;
&#xD;
2020-11-03 19:35:59 - [TEST_STEP][PASSED] - while (listOfElement.hasNext()): null&#xD;
&#xD;
2020-11-03 19:35:59 - [TEST_STEP][PASSED] - object = listOfElement.next(): null&#xD;
&#xD;
2020-11-03 19:35:59 - [TEST_STEP][PASSED] - if (getText().contentEquals("demo map test")): null&#xD;
&#xD;
2020-11-03 19:36:00 - [TEST_STEP][PASSED] - flag = true: null&#xD;
&#xD;
2020-11-03 19:36:00 - [TEST_STEP][PASSED] - if (flag == true): null&#xD;
&#xD;
2020-11-03 19:36:00 - [TEST_STEP][PASSED] - markPassed(" *** Map Location entity found *** "):  *** Map Location entity found *** &#xD;
&#xD;
2020-11-03 19:36:00 - [MESSAGE][PASSED] -  *** Map Location entity found *** &#xD;
&#xD;
2020-11-03 19:36:00 - [TEST_STEP][PASSED] - object.click(): null&#xD;
&#xD;
2020-11-03 19:36:01 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-11-03 19:36:01 - [TEST_STEP][PASSED] - if (flag == false): null&#xD;
&#xD;
2020-11-03 19:36:01 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; ENTITY NAME IS PRESENT ON SLOTS ***"):  *** VALIDATION --&gt; ENTITY NAME IS PRESENT ON SLOTS ***&#xD;
&#xD;
2020-11-03 19:36:01 - [MESSAGE][INFO] -  *** VALIDATION --&gt; ENTITY NAME IS PRESENT ON SLOTS ***&#xD;
&#xD;
2020-11-03 19:36:01 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Slots/entityValue", ["rowValue":1]), "demo map test", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Slots/entityValue' are matched.&#xD;
&#xD;
2020-11-03 19:36:04 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Slots/entityValue' are matched.&#xD;
&#xD;
2020-11-03 19:36:04 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 2 STARTED ***"):  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:04 - [MESSAGE][INFO] -  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:04 - [TEST_STEP][PASSED] - testObject = modifyObjectProperty(findTestObject("Slots/checkbox"), "xpath", "not equals", newXpath, true, STOP_ON_FAILURE): Modify property of object successfully&#xD;
&#xD;
2020-11-03 19:36:04 - [MESSAGE][PASSED] - Modify property of object successfully&#xD;
&#xD;
2020-11-03 19:36:04 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; CHECKBOX FIELD SHOULD HAVE ATTRIBUTE *DISABLED* ***"):  *** VALIDATION --&gt; CHECKBOX FIELD SHOULD HAVE ATTRIBUTE *DISABLED* ***&#xD;
&#xD;
2020-11-03 19:36:04 - [MESSAGE][INFO] -  *** VALIDATION --&gt; CHECKBOX FIELD SHOULD HAVE ATTRIBUTE *DISABLED* ***&#xD;
&#xD;
2020-11-03 19:36:04 - [TEST_STEP][PASSED] - verifyElementHasAttribute(testObject, "disabled", 20, CONTINUE_ON_FAILURE): Object 'Object Repository/Slots/checkbox' has attribute 'disabled'&#xD;
&#xD;
2020-11-03 19:36:06 - [MESSAGE][PASSED] - Object 'Object Repository/Slots/checkbox' has attribute 'disabled'&#xD;
&#xD;
2020-11-03 19:36:06 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 3 STARTED ***"):  *** SCENARIO 3 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:06 - [MESSAGE][INFO] -  *** SCENARIO 3 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:06 - [TEST_STEP][PASSED] - setText(findTestObject("Slots/retries", ["rowValue":"1"]), "6", OPTIONAL): Text '6' is set on object 'Object Repository/Slots/retries'&#xD;
&#xD;
2020-11-03 19:36:10 - [MESSAGE][PASSED] - Text '6' is set on object 'Object Repository/Slots/retries'&#xD;
&#xD;
2020-11-03 19:36:10 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:12 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:12 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:15 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:15 - [TEST_STEP][PASSED] - verifyTextPresent("Training data", false, CONTINUE_ON_FAILURE): Text 'Training data' is present on page &#xD;
&#xD;
2020-11-03 19:36:19 - [MESSAGE][PASSED] - Text 'Training data' is present on page &#xD;
&#xD;
2020-11-03 19:36:19 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"map_intent"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:21 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:21 - [TEST_STEP][PASSED] - retryValue = executeJavaScript(getValue, null): Execute JavaScript 'return document.querySelector('[type="number"]').value;' successfully&#xD;
&#xD;
2020-11-03 19:36:22 - [MESSAGE][PASSED] - Execute JavaScript 'return document.querySelector('[type="number"]').value;' successfully&#xD;
&#xD;
2020-11-03 19:36:22 - [TEST_STEP][PASSED] - assert toString().contentEquals("6") == true: null&#xD;
&#xD;
2020-11-03 19:36:22 - [TEST_STEP][PASSED] - comment(" *** Navigate out of intent ***"):  *** Navigate out of intent ***&#xD;
&#xD;
2020-11-03 19:36:22 - [MESSAGE][INFO] -  *** Navigate out of intent ***&#xD;
&#xD;
2020-11-03 19:36:22 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:25 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/freeformEntityCreation_Test" classname="Test Cases/Sprint/v4.4/freeformEntityCreation_Test" status="PASSED">
            <system-out>2020-11-03 19:36:25 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/freeformEntityCreation_Test: Test Cases/Sprint/v4.4/freeformEntityCreation_Test&#xD;
&#xD;
2020-11-03 19:36:25 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/training")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:28 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:28 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_Task"): null&#xD;
&#xD;
2020-11-03 19:36:28 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"Entities"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:30 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 1 STARTED ***"):  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:30 - [MESSAGE][INFO] -  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/createEntity")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:33 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:33 - [TEST_STEP][PASSED] - platform.Training.createEntity(testData.getValue("freeform_entity", 1), " Free form ", null): platform.Training.createEntity is PASSED&#xD;
&#xD;
2020-11-03 19:36:36 - [MESSAGE][PASSED] - Keys 'freeform org' sent to object: 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:36:38 - [MESSAGE][INFO] - Entity Type:  Free form &#xD;
&#xD;
2020-11-03 19:36:43 - [MESSAGE][PASSED] - platform.Training.createEntity is PASSED&#xD;
&#xD;
2020-11-03 19:36:43 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:36:44 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:36:44 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; ENTITY CREATION CHECK ***"):  *** VALIDATION --&gt; ENTITY CREATION CHECK ***&#xD;
&#xD;
2020-11-03 19:36:44 - [MESSAGE][INFO] -  *** VALIDATION --&gt; ENTITY CREATION CHECK ***&#xD;
&#xD;
2020-11-03 19:36:44 - [TEST_STEP][PASSED] - mapElement = findWebElements(findTestObject("GenericII/listOfEntityNames"), 5).get(0): null&#xD;
&#xD;
2020-11-03 19:36:46 - [TEST_STEP][PASSED] - assert getText().contentEquals("freeform org") == true: null&#xD;
&#xD;
2020-11-03 19:36:47 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 2 STARTED ***"):  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:47 - [MESSAGE][INFO] -  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:36:47 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(convertWebElementToTestObject(mapElement)): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:51 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:51 - [TEST_STEP][PASSED] - setText(findTestObject("Input/entityName"), testData.getValue("freeform_entity", 2)): Text 'updated freeform' is set on object 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:36:55 - [MESSAGE][PASSED] - Text 'updated freeform' is set on object 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:36:55 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/entityPageSaveButton")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:58 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:36:58 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:36:59 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:36:59 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; ENTITY NAME UPDATE CHECK ***"):  *** VALIDATION --&gt; ENTITY NAME UPDATE CHECK ***&#xD;
&#xD;
2020-11-03 19:36:59 - [MESSAGE][INFO] -  *** VALIDATION --&gt; ENTITY NAME UPDATE CHECK ***&#xD;
&#xD;
2020-11-03 19:36:59 - [TEST_STEP][PASSED] - mapElement = findWebElements(findTestObject("GenericII/listOfEntityNames"), 5).get(0): null&#xD;
&#xD;
2020-11-03 19:37:00 - [TEST_STEP][PASSED] - assert getText().contentEquals("updated freeform") == true: null&#xD;
&#xD;
2020-11-03 19:37:01 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/response")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:37:04 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:37:04 - [TEST_STEP][PASSED] - platform.Response.createRichResponse(testData.getValue("rich_template", 7), testData.getValue("rich_template_value", 7)): platform.Response.createRichResponse is PASSED&#xD;
&#xD;
2020-11-03 19:37:11 - [MESSAGE][PASSED] - Text 'freeform_response' is set on object 'Object Repository/NewRepo2/templateKeyName'&#xD;
&#xD;
2020-11-03 19:37:15 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-11-03 19:37:20 - [MESSAGE][PASSED] - Text 'Your response for freeform will be here' is set on object 'Object Repository/Input/textResponse'&#xD;
&#xD;
2020-11-03 19:37:23 - [MESSAGE][PASSED] - platform.Response.createRichResponse is PASSED&#xD;
&#xD;
2020-11-03 19:37:23 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:37:24 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:37:24 - [TEST_STEP][PASSED] - platform.Response.createRichResponse(testData.getValue("rich_template", 8), testData.getValue("rich_template_value", 8)): platform.Response.createRichResponse is PASSED&#xD;
&#xD;
2020-11-03 19:37:30 - [MESSAGE][PASSED] - Text 'ask_freeform' is set on object 'Object Repository/NewRepo2/templateKeyName'&#xD;
&#xD;
2020-11-03 19:37:34 - [MESSAGE][PASSED] - Delayed 2 second(s)&#xD;
&#xD;
2020-11-03 19:37:40 - [MESSAGE][PASSED] - Text 'Please enter a freeform content' is set on object 'Object Repository/Input/textResponse'&#xD;
&#xD;
2020-11-03 19:37:43 - [MESSAGE][PASSED] - platform.Response.createRichResponse is PASSED&#xD;
&#xD;
2020-11-03 19:37:43 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:37:45 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/freeformEntityTaggingInIntent_Test" classname="Test Cases/Sprint/v4.4/freeformEntityTaggingInIntent_Test" status="PASSED">
            <system-out>2020-11-03 19:37:45 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/freeformEntityTaggingInIntent_Test: Test Cases/Sprint/v4.4/freeformEntityTaggingInIntent_Test&#xD;
&#xD;
2020-11-03 19:37:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/training")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:37:48 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:37:48 - [TEST_STEP][PASSED] - testData = findTestData("Data Files/testData_Task"): null&#xD;
&#xD;
2020-11-03 19:37:49 - [TEST_STEP][PASSED] - refresh(): Refresh successfully&#xD;
&#xD;
2020-11-03 19:37:56 - [MESSAGE][PASSED] - Refresh successfully&#xD;
&#xD;
2020-11-03 19:37:56 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Button/createIntent"), 40, STOP_ON_FAILURE): Object 'Object Repository/Button/createIntent' is visible&#xD;
&#xD;
2020-11-03 19:38:05 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createIntent' is visible&#xD;
&#xD;
2020-11-03 19:38:05 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 1 STARTED *** "):  *** SCENARIO 1 STARTED *** &#xD;
&#xD;
2020-11-03 19:38:05 - [MESSAGE][INFO] -  *** SCENARIO 1 STARTED *** &#xD;
&#xD;
2020-11-03 19:38:05 - [TEST_STEP][PASSED] - platform.Training.addSingleUtterance(testData.getValue("freeform_utterance", 1)): platform.Training.addSingleUtterance is PASSED&#xD;
&#xD;
2020-11-03 19:38:10 - [MESSAGE][PASSED] - Keys 'freeform test' sent to object: 'Object Repository/Input/utterance'&#xD;
&#xD;
2020-11-03 19:38:13 - [MESSAGE][PASSED] - platform.Training.addSingleUtterance is PASSED&#xD;
&#xD;
2020-11-03 19:38:13 - [TEST_STEP][PASSED] - element = findWebElement(findTestObject("Slots/listOfUtterance"), 5): null&#xD;
&#xD;
2020-11-03 19:38:14 - [TEST_STEP][PASSED] - element.click(): null&#xD;
&#xD;
2020-11-03 19:38:15 - [TEST_STEP][PASSED] - element.sendKeys(Keys.chord(CONTROL, "a")): null&#xD;
&#xD;
2020-11-03 19:38:16 - [TEST_STEP][PASSED] - element.click(): null&#xD;
&#xD;
2020-11-03 19:38:17 - [TEST_STEP][PASSED] - if (verifyElementPresent(findTestObject("Generic/entitySelection"), 20, OPTIONAL) == false): Object 'Object Repository/Generic/entitySelection' is present&#xD;
&#xD;
2020-11-03 19:38:19 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/entitySelection' is present&#xD;
&#xD;
2020-11-03 19:38:19 - [TEST_STEP][PASSED] - else: *** Freeform entity not found ***&#xD;
&#xD;
2020-11-03 19:38:19 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/entitySelection")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:21 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:21 - [TEST_STEP][PASSED] - entityOptions = findWebElements(findTestObject("WEB_OBJECTS/getOptions"), 20): null&#xD;
&#xD;
2020-11-03 19:38:22 - [TEST_STEP][PASSED] - for (org.openqa.selenium.WebElement value : entityOptions): null&#xD;
&#xD;
2020-11-03 19:38:22 - [TEST_STEP][PASSED] - assert getText().contentEquals(testData.getValue("freeform_entity", 2)) == false: null&#xD;
&#xD;
2020-11-03 19:38:23 - [TEST_STEP][PASSED] - markPassed("*** Freeform entity not found ***"): *** Freeform entity not found ***&#xD;
&#xD;
2020-11-03 19:38:23 - [MESSAGE][PASSED] - *** Freeform entity not found ***&#xD;
&#xD;
2020-11-03 19:38:23 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 2 STARTED *** "):  *** SCENARIO 2 STARTED *** &#xD;
&#xD;
2020-11-03 19:38:23 - [MESSAGE][INFO] -  *** SCENARIO 2 STARTED *** &#xD;
&#xD;
2020-11-03 19:38:23 - [TEST_STEP][PASSED] - platform.Training.createNewEntityManually(testData.getValue("freeform_entity", 3), " Free form ", null): platform.Training.createNewEntityManually is PASSED&#xD;
&#xD;
2020-11-03 19:38:29 - [MESSAGE][PASSED] - Keys 'demo freeform' sent to object: 'Object Repository/Input/entityName'&#xD;
&#xD;
2020-11-03 19:38:31 - [MESSAGE][INFO] - Entity Type:  Free form &#xD;
&#xD;
2020-11-03 19:38:36 - [MESSAGE][PASSED] - platform.Training.createNewEntityManually is PASSED&#xD;
&#xD;
2020-11-03 19:38:36 - [TEST_STEP][PASSED] - waitForElementPresent(findTestObject("ICONS/toastMsg"), 30, CONTINUE_ON_FAILURE): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:38:38 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:38:38 - [TEST_STEP][PASSED] - verifyElementNotPresent(findTestObject("Slots/entityValue", ["rowValue":1]), 30, CONTINUE_ON_FAILURE): Web element with id: 'Object Repository/Slots/entityValue' located by 'By.xpath: //tbody[2]/tr[1]/td[2]' is not present after '30' second(s)&#xD;
&#xD;
2020-11-03 19:38:39 - [MESSAGE][PASSED] - Web element with id: 'Object Repository/Slots/entityValue' located by 'By.xpath: //tbody[2]/tr[1]/td[2]' is not present after '30' second(s)&#xD;
&#xD;
2020-11-03 19:38:39 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/intentName"), testData.getValue("intent_name", 8)): Keys 'freeform_test' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-11-03 19:38:42 - [MESSAGE][PASSED] - Keys 'freeform_test' sent to object: 'Object Repository/Input/intentName'&#xD;
&#xD;
2020-11-03 19:38:42 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/finalTempKey"), findTestData("Data Files/testData_Task").getValue("rich_template", 7)): Keys 'freeform_response' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-11-03 19:38:45 - [MESSAGE][PASSED] - Keys 'freeform_response' sent to object: 'Object Repository/Input/finalTempKey'&#xD;
&#xD;
2020-11-03 19:38:45 - [TEST_STEP][PASSED] - executeJavaScript("document.getElementsByClassName('bg-red')[0].classList.remove('bg-red');", null): Execute JavaScript 'document.getElementsByClassName('bg-red')[0].classList.remove('bg-red');' successfully&#xD;
&#xD;
2020-11-03 19:38:46 - [MESSAGE][PASSED] - Execute JavaScript 'document.getElementsByClassName('bg-red')[0].classList.remove('bg-red');' successfully&#xD;
&#xD;
2020-11-03 19:38:46 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:49 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:49 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/header"), "freeform_test", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/header' are matched.&#xD;
&#xD;
2020-11-03 19:38:51 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/header' are matched.&#xD;
&#xD;
2020-11-03 19:38:51 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:54 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:54 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":testData.getValue("intent_name", 8)])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:56 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:38:56 - [TEST_STEP][PASSED] - comment(" *** VALIDATION: VERIFY FREEFORM ENTITY ON SLOT ***"):  *** VALIDATION: VERIFY FREEFORM ENTITY ON SLOT ***&#xD;
&#xD;
2020-11-03 19:38:56 - [MESSAGE][INFO] -  *** VALIDATION: VERIFY FREEFORM ENTITY ON SLOT ***&#xD;
&#xD;
2020-11-03 19:38:56 - [TEST_STEP][PASSED] - verifyElementNotPresent(findTestObject("Slots/markedUpEntity"), 20, CONTINUE_ON_FAILURE): Web element with id: 'Object Repository/Slots/markedUpEntity' located by 'By.xpath: //span[@class='bg-red']' is not present after '20' second(s)&#xD;
&#xD;
2020-11-03 19:38:57 - [MESSAGE][PASSED] - Web element with id: 'Object Repository/Slots/markedUpEntity' located by 'By.xpath: //span[@class='bg-red']' is not present after '20' second(s)&#xD;
&#xD;
2020-11-03 19:38:57 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:00 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:00 - [TEST_STEP][PASSED] - verifyTextPresent("Training data", false, CONTINUE_ON_FAILURE): Text 'Training data' is present on page &#xD;
&#xD;
2020-11-03 19:39:03 - [MESSAGE][PASSED] - Text 'Training data' is present on page</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/freeformLinkToSlots_Test" classname="Test Cases/Sprint/v4.4/freeformLinkToSlots_Test" status="PASSED">
            <system-out>2020-11-03 19:39:03 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/freeformLinkToSlots_Test: Test Cases/Sprint/v4.4/freeformLinkToSlots_Test&#xD;
&#xD;
2020-11-03 19:39:04 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"freeform_test"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:06 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:06 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 1 STARTED ***"):  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:39:06 - [MESSAGE][INFO] -  *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:39:06 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("Slots/linkEntity"), 10, CONTINUE_ON_FAILURE): Object 'Object Repository/Slots/linkEntity' is present&#xD;
&#xD;
2020-11-03 19:39:07 - [MESSAGE][PASSED] - Object 'Object Repository/Slots/linkEntity' is present&#xD;
&#xD;
2020-11-03 19:39:07 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Slots/linkEntity")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:10 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:10 - [TEST_STEP][PASSED] - listOfEntities = findWebElements(findTestObject("WEB_OBJECTS/entityList"), 20): null&#xD;
&#xD;
2020-11-03 19:39:11 - [TEST_STEP][PASSED] - flag = false: null&#xD;
&#xD;
2020-11-03 19:39:11 - [TEST_STEP][PASSED] - listOfElement = listOfEntities.iterator(): null&#xD;
&#xD;
2020-11-03 19:39:11 - [TEST_STEP][PASSED] - while (listOfElement.hasNext()): null&#xD;
&#xD;
2020-11-03 19:39:11 - [TEST_STEP][PASSED] - object = listOfElement.next(): null&#xD;
&#xD;
2020-11-03 19:39:11 - [TEST_STEP][PASSED] - if (getText().contentEquals("demo freeform")): null&#xD;
&#xD;
2020-11-03 19:39:12 - [TEST_STEP][PASSED] - flag = true: null&#xD;
&#xD;
2020-11-03 19:39:12 - [TEST_STEP][PASSED] - if (flag == true): null&#xD;
&#xD;
2020-11-03 19:39:12 - [TEST_STEP][PASSED] - markPassed(" *** Freeform entity found *** "):  *** Freeform entity found *** &#xD;
&#xD;
2020-11-03 19:39:12 - [MESSAGE][PASSED] -  *** Freeform entity found *** &#xD;
&#xD;
2020-11-03 19:39:12 - [TEST_STEP][PASSED] - object.click(): null&#xD;
&#xD;
2020-11-03 19:39:13 - [TEST_STEP][PASSED] - break: null&#xD;
&#xD;
2020-11-03 19:39:13 - [TEST_STEP][PASSED] - if (flag == false): null&#xD;
&#xD;
2020-11-03 19:39:13 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; ENTITY NAME IS PRESENT ON SLOTS ***"):  *** VALIDATION --&gt; ENTITY NAME IS PRESENT ON SLOTS ***&#xD;
&#xD;
2020-11-03 19:39:13 - [MESSAGE][INFO] -  *** VALIDATION --&gt; ENTITY NAME IS PRESENT ON SLOTS ***&#xD;
&#xD;
2020-11-03 19:39:13 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Slots/entityValue", ["rowValue":1]), "demo freeform", CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Slots/entityValue' are matched.&#xD;
&#xD;
2020-11-03 19:39:16 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Slots/entityValue' are matched.&#xD;
&#xD;
2020-11-03 19:39:16 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 2 STARTED ***"):  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:39:16 - [MESSAGE][INFO] -  *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:39:16 - [TEST_STEP][PASSED] - testObject = modifyObjectProperty(findTestObject("Slots/checkbox"), "xpath", "not equals", newXpath, true, STOP_ON_FAILURE): Modify property of object successfully&#xD;
&#xD;
2020-11-03 19:39:16 - [MESSAGE][PASSED] - Modify property of object successfully&#xD;
&#xD;
2020-11-03 19:39:16 - [TEST_STEP][PASSED] - comment(" *** VALIDATION --&gt; CHECKBOX FIELD SHOULD HAVE ATTRIBUTE *DISABLED* ***"):  *** VALIDATION --&gt; CHECKBOX FIELD SHOULD HAVE ATTRIBUTE *DISABLED* ***&#xD;
&#xD;
2020-11-03 19:39:16 - [MESSAGE][INFO] -  *** VALIDATION --&gt; CHECKBOX FIELD SHOULD HAVE ATTRIBUTE *DISABLED* ***&#xD;
&#xD;
2020-11-03 19:39:16 - [TEST_STEP][PASSED] - verifyElementHasAttribute(testObject, "disabled", 20, CONTINUE_ON_FAILURE): Object 'Object Repository/Slots/checkbox' has attribute 'disabled'&#xD;
&#xD;
2020-11-03 19:39:18 - [MESSAGE][PASSED] - Object 'Object Repository/Slots/checkbox' has attribute 'disabled'&#xD;
&#xD;
2020-11-03 19:39:18 - [TEST_STEP][PASSED] - setText(findTestObject("Slots/retries", ["rowValue":"1"]), "2", OPTIONAL): Text '2' is set on object 'Object Repository/Slots/retries'&#xD;
&#xD;
2020-11-03 19:39:22 - [MESSAGE][PASSED] - Text '2' is set on object 'Object Repository/Slots/retries'&#xD;
&#xD;
2020-11-03 19:39:22 - [TEST_STEP][PASSED] - setText(findTestObject("Slots/templateKey", ["rowValue":1]), findTestData("Data Files/testData_Task").getValue("rich_template", 8)): Text 'ask_freeform' is set on object 'Object Repository/Slots/templateKey'&#xD;
&#xD;
2020-11-03 19:39:26 - [MESSAGE][PASSED] - Text 'ask_freeform' is set on object 'Object Repository/Slots/templateKey'&#xD;
&#xD;
2020-11-03 19:39:26 - [TEST_STEP][PASSED] - takeScreenshot(getProjectDir() + "/Screenshot/" + image_title): Taking screenshot successfully&#xD;
&#xD;
2020-11-03 19:39:27 - [MESSAGE][PASSED] - Taking screenshot successfully&#xD;
[[ATTACHMENT|D:\\IMIbot.ai-Project\\Reports\\20201103_193119\\v4.4_TaskSuite\\20201103_193122\\D:/IMIbot.ai-Project/Screenshot/freeform_loc.jpg]]&#xD;
&#xD;
2020-11-03 19:39:27 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/save", ["value":" Save "])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:30 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:30 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:32 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:32 - [TEST_STEP][PASSED] - verifyTextPresent("Training data", false, CONTINUE_ON_FAILURE): Text 'Training data' is present on page &#xD;
&#xD;
2020-11-03 19:39:35 - [MESSAGE][PASSED] - Text 'Training data' is present on page &#xD;
&#xD;
2020-11-03 19:39:35 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Generic/webObjectWithText", ["textValue":"freeform_test"])): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:37 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:37 - [TEST_STEP][PASSED] - retryValue = executeJavaScript(getValue, null): Execute JavaScript 'return document.querySelector('[type="number"]').value;' successfully&#xD;
&#xD;
2020-11-03 19:39:38 - [MESSAGE][PASSED] - Execute JavaScript 'return document.querySelector('[type="number"]').value;' successfully&#xD;
&#xD;
2020-11-03 19:39:38 - [TEST_STEP][PASSED] - assert toString().contentEquals("2") == true: null&#xD;
&#xD;
2020-11-03 19:39:38 - [TEST_STEP][PASSED] - comment(" *** SCENARIO 3 STARTED ***"):  *** SCENARIO 3 STARTED ***&#xD;
&#xD;
2020-11-03 19:39:38 - [MESSAGE][INFO] -  *** SCENARIO 3 STARTED ***&#xD;
&#xD;
2020-11-03 19:39:38 - [TEST_STEP][PASSED] - mouseOver(findTestObject("WEB_OBJECTS/mat-icon", ["class_value":"freeform"]), OPTIONAL): Object: 'Object Repository/WEB_OBJECTS/mat-icon' is hovered&#xD;
&#xD;
2020-11-03 19:39:41 - [MESSAGE][PASSED] - Object: 'Object Repository/WEB_OBJECTS/mat-icon' is hovered&#xD;
&#xD;
2020-11-03 19:39:41 - [TEST_STEP][PASSED] - comment(" *** VALIDATION CHECK FOR ELEMENT ATTRIBUTE ***"):  *** VALIDATION CHECK FOR ELEMENT ATTRIBUTE ***&#xD;
&#xD;
2020-11-03 19:39:41 - [MESSAGE][INFO] -  *** VALIDATION CHECK FOR ELEMENT ATTRIBUTE ***&#xD;
&#xD;
2020-11-03 19:39:41 - [TEST_STEP][PASSED] - verifyElementAttributeValue(findTestObject("WEB_OBJECTS/mat-icon", ["class_value":"freeform"]), "mattooltip", testValue, 20, CONTINUE_ON_FAILURE): Object 'Object Repository/WEB_OBJECTS/mat-icon' has attribute 'mattooltip' with value 'Retries are valid only on empty value'&#xD;
&#xD;
2020-11-03 19:39:44 - [MESSAGE][PASSED] - Object 'Object Repository/WEB_OBJECTS/mat-icon' has attribute 'mattooltip' with value 'Retries are valid only on empty value'&#xD;
&#xD;
2020-11-03 19:39:44 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("NewRepo/intentGoBack")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:46 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:39:46 - [TEST_STEP][PASSED] - refresh(): Refresh successfully&#xD;
&#xD;
2020-11-03 19:39:51 - [MESSAGE][PASSED] - Refresh successfully&#xD;
&#xD;
2020-11-03 19:39:51 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Button/createIntent"), 40, STOP_ON_FAILURE): Object 'Object Repository/Button/createIntent' is visible&#xD;
&#xD;
2020-11-03 19:39:59 - [MESSAGE][PASSED] - Object 'Object Repository/Button/createIntent' is visible</system-out>
            <system-err></system-err>
        </testcase>
        <testcase name="Test Cases/Sprint/v4.4/verifyFreeformPreview" classname="Test Cases/Sprint/v4.4/verifyFreeformPreview" status="PASSED">
            <system-out>2020-11-03 19:39:59 - [TEST_CASE][PASSED] - Test Cases/Sprint/v4.4/verifyFreeformPreview: Test Cases/Sprint/v4.4/verifyFreeformPreview&#xD;
&#xD;
2020-11-03 19:40:00 - [TEST_STEP][PASSED] - platform.Method.trainAndComment("Freeform intent trained"): platform.Method.trainAndComment is PASSED&#xD;
&#xD;
2020-11-03 19:40:07 - [MESSAGE][PASSED] - Keys 'Freeform intent trained' sent to object: 'Object Repository/Input/comment'&#xD;
&#xD;
2020-11-03 19:40:09 - [MESSAGE][PASSED] - platform.Method.trainAndComment is PASSED&#xD;
&#xD;
2020-11-03 19:40:09 - [TEST_STEP][PASSED] - verifyElementPresent(findTestObject("ICONS/toastMsg"), 30, OPTIONAL): Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:40:10 - [MESSAGE][PASSED] - Object 'Object Repository/ICONS/toastMsg' is present&#xD;
&#xD;
2020-11-03 19:40:10 - [TEST_STEP][PASSED] - comment("*** SCENARIO 1 STARTED ***"): *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:40:10 - [MESSAGE][INFO] - *** SCENARIO 1 STARTED ***&#xD;
&#xD;
2020-11-03 19:40:10 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:40:13 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:40:13 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Input/chatInput"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/Input/chatInput' is visible&#xD;
&#xD;
2020-11-03 19:40:15 - [MESSAGE][PASSED] - Object 'Object Repository/Input/chatInput' is visible&#xD;
&#xD;
2020-11-03 19:40:15 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER)): Keys 'ENTER + freeform test' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:18 - [MESSAGE][PASSED] - Keys 'ENTER + freeform test' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:18 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/botReponse", ["index":2]), 20, OPTIONAL): Object 'Object Repository/Generic/botReponse' is visible&#xD;
&#xD;
2020-11-03 19:40:21 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/botReponse' is visible&#xD;
&#xD;
2020-11-03 19:40:21 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/botReponse", ["index":2]), expected_value, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:24 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:24 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(freeform_text, ENTER)): Keys 'ENTER + كيف حالكم' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:26 - [MESSAGE][PASSED] - Keys 'ENTER + كيف حالكم' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:26 - [TEST_STEP][PASSED] - comment("*** VALIDATION CHECK FOR BOT RESPONSE ***"): *** VALIDATION CHECK FOR BOT RESPONSE ***&#xD;
&#xD;
2020-11-03 19:40:26 - [MESSAGE][INFO] - *** VALIDATION CHECK FOR BOT RESPONSE ***&#xD;
&#xD;
2020-11-03 19:40:26 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/botReponse", ["index":3]), final_value, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:28 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:28 - [TEST_STEP][PASSED] - comment("*** SCENARIO 2 STARTED ***"): *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:40:28 - [MESSAGE][INFO] - *** SCENARIO 2 STARTED ***&#xD;
&#xD;
2020-11-03 19:40:28 - [TEST_STEP][PASSED] - platform.Method.clickOnElement(findTestObject("Button/preview")): platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:40:31 - [MESSAGE][PASSED] - platform.Method.clickOnElement is PASSED&#xD;
&#xD;
2020-11-03 19:40:31 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Input/chatInput"), 20, CONTINUE_ON_FAILURE): Object 'Object Repository/Input/chatInput' is visible&#xD;
&#xD;
2020-11-03 19:40:33 - [MESSAGE][PASSED] - Object 'Object Repository/Input/chatInput' is visible&#xD;
&#xD;
2020-11-03 19:40:33 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(userQuery, ENTER)): Keys 'ENTER + freeform test' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:35 - [MESSAGE][PASSED] - Keys 'ENTER + freeform test' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:36 - [TEST_STEP][PASSED] - waitForElementVisible(findTestObject("Generic/botReponse", ["index":2]), 20, OPTIONAL): Object 'Object Repository/Generic/botReponse' is visible&#xD;
&#xD;
2020-11-03 19:40:38 - [MESSAGE][PASSED] - Object 'Object Repository/Generic/botReponse' is visible&#xD;
&#xD;
2020-11-03 19:40:38 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/botReponse", ["index":2]), expected_value, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:40 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:40 - [TEST_STEP][PASSED] - sendKeys(findTestObject("Input/chatInput"), Keys.chord(new_intent_value, ENTER)): Keys 'ENTER + do you deliver' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:43 - [MESSAGE][PASSED] - Keys 'ENTER + do you deliver' sent to object: 'Object Repository/Input/chatInput'&#xD;
&#xD;
2020-11-03 19:40:43 - [TEST_STEP][PASSED] - comment("*** VALIDATION CHECK FOR BOT RESPONSE ***"): *** VALIDATION CHECK FOR BOT RESPONSE ***&#xD;
&#xD;
2020-11-03 19:40:43 - [MESSAGE][INFO] - *** VALIDATION CHECK FOR BOT RESPONSE ***&#xD;
&#xD;
2020-11-03 19:40:43 - [TEST_STEP][PASSED] - verifyElementText(findTestObject("Generic/botReponse", ["index":3]), final_value, CONTINUE_ON_FAILURE): Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.&#xD;
&#xD;
2020-11-03 19:40:45 - [MESSAGE][PASSED] - Actual text and expected text of test object 'Object Repository/Generic/botReponse' are matched.</system-out>
            <system-err></system-err>
        </testcase>
        <system-out>2020-11-03 19:31:33 - [TEST_SUITE][INCOMPLETE] - v4.4_TaskSuite: null</system-out>
        <system-err>2020-11-03 19:31:33 - [TEST_SUITE][INCOMPLETE] - v4.4_TaskSuite: null</system-err>
    </testsuite>
</testsuites>
